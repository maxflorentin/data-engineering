"
SET mapred.job.queue.name=root.dataeng;
set hive.exec.dynamic.partition.mode=nonstrict;

--------------------------------------------------
-- TABLA TEMPORAL DE INTERFACES ORDENES DE PAGO --
--------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP;

CREATE TEMPORARY TABLE BI_CORP_COMMON.COMEX_INTERFACES_P_TMP AS
WITH TABLA_DISTINCT AS(
SELECT
 '' AS ID_INTERFACES
,'50' AS PROD_CTBLE
,'00' AS COD_MOV
,'00' AS SUBCOD_MOV
,O.NUMERO
,LPAD (TRIM (O.NUP), 8, '0') AS NUP
,P.ORIGEN_PAGO
,P.FECHA_LIQ AS FECHA_OPERACION
,P.F_VERIF AS FECHA_PAGO
,P.F_CARGA FECHA_CARGA
,P.F_VENCIMIENTO_LIQ FECHA_VTO
,P.IMPORTE AS IMP_ALTA_OPERAC_ME
,CASE
	WHEN P.MONEDA = P.ACCOUNTNO_MONEDA THEN (B.COTIZACION*P.IMPORTE)
	ELSE D.IMPORTE_PESOS
 END AS IMP_OPERAC_PESOS
,0 AS IMP_TIPO_CAMBIO_DIA
,P.IMPORTE AS ESP_CANT
,P.MONEDA AS ESP_TIPO
,P.MONEDA AS COD_MONEDA
,SUBSTR(P.ACCOUNTNO, 8, 1) AS CTA_TIPO
,SUBSTR(P.ACCOUNTNO, 9, 7) AS CTA_OPERAC
,SUBSTR(P.ACCOUNTNO, 5, 3) AS CTA_SUC
,P.ACCOUNTNO AS ACCOUNTNO
,TRIM(O.NRO_BANKTRADE) AS NRO_BANKTRADE
,P.SECUENCIA
,'' NRO_CORRELATIVO
,SUBSTR(O.CUENTA_BP, 1,8) AS NRO_CUENTA_BANCA_PRIVADA
,P.LIQ_BKT AS NRO_BKT
,'' AS BANCO_CORRE
,SUBSTR(O.OBSERVA, 1, 11) AS BANCO_CORRE_COD
,SUBSTR(O.OBSERVA, 5, 2) AS BANCO_CORRE_COD_PAIS
,SUBSTR(PS.DESCRIPCION, 1, 20) BANCO_CORRE_PAIS
,'' AS BANCO_CORRE_CIUDAD
,'' AS BANCO_CORRE_DOM
,SUBSTR (O.ORDENANTE, 1, 50) BENEFI_EXTERIOR
,SUBSTR (O.PAIS_ORIGEN, 1, 2) BENEFI_COD_PAIS
,'' BENEFI_DOM
,CASE
    WHEN SUBSTR(P.LIQ_BKT, 1, 1) = 'W' THEN 'BKT'
	ELSE
		CASE
			WHEN SUBSTR(P.LIQ_BKT, 1, 2) IN ('T4','P1','P2') THEN 'BKT'
			ELSE 'CMX'
		END
 END AS ORIGEN
,SUBSTR (O.USUARIO, 1, 7) AS TRABAJADOR1
,SUBSTR (P.USU_CARGA, 1, 7) AS TRABAJADOR2
,'N' AS MARCA_ERROR
,F.ID_SWIFT AS SEQ
,SUBSTR(O.BENEFICIARIO, 1, 40) AS NOMBRE_CLIENTE_BANCO
,P.ID_BOLETO
,CASE
	WHEN B.SECTOR = 1 THEN 'IMPORTACION'
	WHEN B.SECTOR = 2 THEN 'EXPORTACION'
	WHEN B.SECTOR = 3 THEN 'SERVICIOS'
  END AS SECTOR
,P.CONCEPTOBCRA
,COALESCE(P.ACCOUNTNO_MONEDA,'080') AS ACCOUNTNO_MONEDA
,M.COD_BCRA
,B.COTIZACION
,P.CANCELA_PREFI
,B.NRO_BOLETO
FROM BI_CORP_STAGING.COMEX_RIO39_OPP_OPS_PAGOS P
JOIN BI_CORP_STAGING.COMEX_RIO39_OPP_OPS O ON P.COD_OPS = O.COD_OPS AND O.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
LEFT OUTER JOIN BI_CORP_STAGING.COMEX_RIO39_BOLETOS_SAM B ON B.ID_BOL = P.ID_BOLETO AND B.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
LEFT OUTER JOIN BI_CORP_STAGING.COMEX_RIO39_OPP_OPS_PAGOS_DET D ON P.COD_OPS = D.COD_OPS AND P.SECUENCIA = D.SECUENCIA AND D.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
LEFT OUTER JOIN BI_CORP_STAGING.COMEX_RIO39_PAISES PS ON O.PAIS_ORIGEN = PS.COD_BCRA AND PS.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
LEFT OUTER JOIN BI_CORP_STAGING.COMEX_RIO39_SWIFT_IN F ON F.NRO_OP = O.NRO_BANKTRADE AND F.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
JOIN BI_CORP_STAGING.COMEX_RIO39_OPP_MONEDAS M ON M.MONCOD = LPAD (P.MONEDA, 3, '0') AND M.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
WHERE D.CONCEPTO = 'BRUTO'
AND O.COD_PRODUCTO = 1
AND COALESCE(O.OP_CITY, 'N') = 'N'
AND (SUBSTR (P.LIQ_BKT, 1, 1) = 'P' AND (LENGTH(P.LIQ_BKT) > 7 AND CAST(SUBSTR(P.LIQ_BKT,2) AS INT) > 300000))
AND P.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
UNION ALL
SELECT
'' AS ID_INTERFACES
,'50' AS PROD_CTBLE
,'00' AS COD_MOV
,'00' AS SUBCOD_MOV
,O.NUMERO
,LPAD(TRIM(O.NUP),8,'0') AS NUP
,P.ORIGEN_PAGO
,P.FECHA_LIQ AS FECHA_OPERACION
,P.FECHA_LIQ AS FECHA_PAGO
,P.F_CARGA FECHA_CARGA
,P.F_VENCIMIENTO_LIQ FECHA_VTO
,P.IMPORTE AS IMP_ALTA_OPERAC_ME
,P.IMPORTE * T.LFT01_EXCH_RT_DISP AS IMP_OPERAC_PESOS
,0 AS IMP_TIPO_CAMBIO_DIA
,P.IMPORTE AS ESP_CANT
,P.MONEDA AS ESP_TIPO
,P.MONEDA AS COD_MONEDA
,SUBSTR(P.ACCOUNTNO,8,1) AS CTA_TIPO
,SUBSTR(P.ACCOUNTNO,9,7) AS CTA_OPERAC
,SUBSTR(P.ACCOUNTNO,5,3) AS CTA_SUC
,P.ACCOUNTNO AS ACCOUNTNO
,TRIM(O.NRO_BANKTRADE) AS NRO_BANKTRADE
,P.SECUENCIA
,'' AS NRO_CORRELATIVO
,SUBSTR(L.LFT0_BN_RV_NM_ADL4,1,8) AS NRO_CUENTA_BANCA_PRIVADA
,P.LIQ_BKT NRO_BKT
,'' AS BANCO_CORRE
,SUBSTR(O.OBSERVA,1,11) AS BANCO_CORRE_COD
,SUBSTR(O.OBSERVA,5,2) AS BANCO_CORRE_COD_PAIS
,SUBSTR(PS.DESCRIPCION,1,20) AS BANCO_CORRE_PAIS
,'' AS BANCO_CORRE_CIUDAD
,'' AS BANCO_CORRE_DOM
,SUBSTR(O.ORDENANTE,1,50) AS BENEFI_EXTERIOR
,SUBSTR(O.PAIS_ORIGEN,1,2) AS BENEFI_COD_PAIS
,'' AS BENEFI_DOM
,CASE
    WHEN SUBSTR(P.LIQ_BKT, 1, 1) = 'W' THEN 'BKT'
	ELSE
		CASE
			WHEN SUBSTR(P.LIQ_BKT, 1, 2) IN ('T4','P1','P2') THEN 'BKT'
			ELSE 'CMX'
		END
 END AS ORIGEN
,SUBSTR(O.USUARIO,1,7) AS TRABAJADOR1
,SUBSTR(P.USU_CARGA,1,7) AS TRABAJADOR2
,'N' AS MARCA_ERROR
,F.ID_SWIFT SEQ
,SUBSTR(O.BENEFICIARIO,1,40) AS NOMBRE_CLIENTE_BANCO
,P.ID_BOLETO
,CASE
	WHEN B.SECTOR = 1 THEN 'IMPORTACION'
	WHEN B.SECTOR = 2 THEN 'EXPORTACION'
	WHEN B.SECTOR = 3 THEN 'SERVICIOS'
  END AS SECTOR
,P.CONCEPTOBCRA
,'000' ACCOUNTNO_MONEDA
,M.COD_BCRA
,B.COTIZACION
,P.CANCELA_PREFI
,B.NRO_BOLETO
FROM BI_CORP_STAGING.COMEX_RIO39_OPP_OPS_PAGOS P
JOIN BI_CORP_STAGING.COMEX_RIO39_OPP_OPS O ON P.COD_OPS = O.COD_OPS AND O.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
LEFT OUTER JOIN BI_CORP_STAGING.COMEX_RIO39_BOLETOS_SAM B ON B.ID_BOL = P.ID_BOLETO AND B.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
LEFT OUTER JOIN BI_CORP_STAGING.COMEX_RIO39_PAISES PS ON O.PAIS_ORIGEN = PS.COD_BCRA AND PS.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
LEFT OUTER JOIN BI_CORP_STAGING.COMEX_RIO39_SWIFT_IN F ON F.NRO_OP = O.NRO_BANKTRADE AND F.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
JOIN BI_CORP_STAGING.COMEX_RIO39_OPP_MONEDAS M ON M.MONCOD = LPAD (P.MONEDA, 3, '0') AND M.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
LEFT OUTER JOIN BI_CORP_STAGING.COMEX_RIO39_LFT01 T ON T.LFT01_GR_PREFIX = SUBSTR(P.LIQ_BKT, 1, 1) AND T.LFT01_GR_NO = SUBSTR (P.LIQ_BKT, 2) AND T.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
LEFT OUTER JOIN BI_CORP_STAGING.COMEX_RIO39_LFT00 L ON L.LFT0_GR_PREFIX = SUBSTR(P.LIQ_BKT, 1, 1) AND L.LFT0_GR_NO = SUBSTR (P.LIQ_BKT, 2) AND L.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
WHERE P.COD_EST_PAGO = 2
AND O.COD_PRODUCTO = 1
AND COALESCE(O.OP_CITY, 'N') = 'N'
AND ((SUBSTR(P.LIQ_BKT, 1, 1) = 'P' AND (LENGTH(P.LIQ_BKT) < 10 AND CAST(SUBSTR(P.LIQ_BKT, 2, 1) AS INT) < 3)) OR SUBSTR(P.LIQ_BKT, 1, 1) <> 'P')
AND ((SUBSTR(O.NRO_BANKTRADE, 1, 1) = 'P' AND (LENGTH(P.LIQ_BKT) < 10 AND CAST(SUBSTR(P.LIQ_BKT, 2, 1) AS INT) < 3)) OR SUBSTR(P.LIQ_BKT, 1, 1) = 'W')
AND P.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
)
SELECT DISTINCT * FROM TABLA_DISTINCT;


----------------------------------------------------------------------------------------------------------------------
-- TABLA TEMPORAL DE INTERFACES ORDENES DE PAGO CON INFORMACION DE IMPORTES, CONCEPTO BCRA, SUBPROD Y NRO_OPERACION --
----------------------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V2;

CREATE TEMPORARY TABLE BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V2 AS
WITH RIO39_COMEX_RCON AS (
SELECT A.CONCEPTOBCRA, A.ID_BOL AS ID_BOLETO
FROM BI_CORP_STAGING.COMEX_RIO39_BOLETOS_SAM_DET A
WHERE A.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AND A.ID_BOL IN (SELECT DISTINCT B.ID_BOLETO FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP B)
),
V_SUBPRODUCTO_BKT AS (
SELECT
 A.LFT0_GR_NO
,A.LFT0_SUFFIX
FROM BI_CORP_STAGING.COMEX_RIO39_LFT00 A
WHERE A.LFT0_GR_PREFIX IN ('P','W')
AND A.LFT0_GR_NO IN (SELECT SUBSTR (TRIM(B.NRO_BANKTRADE), 2, 6) FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP B)
AND A.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
),
TIPO_CAMBIO AS (
SELECT DISTINCT PRECIOVENTA, TRIM(ESPECIE) AS COD_BCRA, FECHA
FROM BI_CORP_STAGING.RIO4_CIERREBNA
WHERE MERCADO = 'LIB' AND CAST(FECHA AS DATE) BETWEEN DATE_ADD(CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE),-1) AND CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE)
),
TIPO_CAMBIO_USD AS (
SELECT DISTINCT PRECIOVENTA, FECHA
FROM BI_CORP_STAGING.RIO4_CIERREBNA
WHERE MERCADO = 'LIB' AND TRIM(ESPECIE) = 'USD' AND CAST(FECHA AS DATE) BETWEEN DATE_ADD(CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE),-5) AND CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE)
),
CONCEPTO_BCRA AS (
SELECT B.CONCEPTOBCRA, A.NRO_BANKTRADE
FROM BI_CORP_STAGING.COMEX_RIO39_OPP_OPS_PAGOS B
JOIN BI_CORP_COMMON.COMEX_INTERFACES_P_TMP A ON UPPER(B.LIQ_BKT) = A.NRO_BANKTRADE
WHERE B.COD_PRODUCTO = 11
AND B.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
)
SELECT
A.*
,CASE
	 WHEN B.CONCEPTOBCRA IN ('000101', '000102', '000103','B01','B02','B03','000B01','000B02','000B03') OR C.LFT0_SUFFIX = '97' THEN 'OPE'
 	 ELSE 'OPS'
 END AS V_SUBPRODUCTO
,'104' AS VTIPO_OPER
,CASE
	WHEN LENGTH(TRIM(A.NRO_BANKTRADE)) = 10 THEN CONCAT(TRIM(A.NRO_BANKTRADE),LPAD(TRIM(A.SECUENCIA), 2, '0'))
	ELSE CONCAT(TRIM(A.NRO_BANKTRADE),LPAD(TRIM(A.SECUENCIA), 3, '0'))
 END AS V_NRO_OPERAC
 ,CASE
	WHEN A.CONCEPTOBCRA IS NULL THEN CBCRA.CONCEPTOBCRA
	ELSE A.CONCEPTOBCRA
 END AS  L_CONCEPTOBCRA
,NVL(
 CASE
	 WHEN A.CANCELA_PREFI = 'S' THEN
		 CASE WHEN D.FECHA IS NOT NULL THEN D.PRECIOVENTA
			  ELSE
				  CASE WHEN E.FECHA IS NOT NULL THEN E.PRECIOVENTA
					  ELSE -1
				  END
		 END
	 ELSE A.COTIZACION
 END,-1) AS IMP_TIPO_CAMBIO_OPERAC
,NVL(
 CASE WHEN F.FECHA IS NOT NULL THEN F.PRECIOVENTA
	   ELSE
			CASE WHEN G.FECHA IS NOT NULL THEN G.PRECIOVENTA
				 ELSE
					 CASE WHEN H.FECHA IS NOT NULL THEN H.PRECIOVENTA
						  ELSE
							  CASE WHEN I.FECHA IS NOT NULL THEN I.PRECIOVENTA
								   ELSE
									   CASE WHEN J.FECHA IS NOT NULL THEN J.PRECIOVENTA
											ELSE -1
										END
							  END
					 END
			END

 END,-1) AS V_IMP_TIPO_CAMBIO_DIA
FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP A
LEFT JOIN RIO39_COMEX_RCON B ON A.ID_BOLETO = B.ID_BOLETO
LEFT JOIN V_SUBPRODUCTO_BKT C ON SUBSTR (TRIM(A.NRO_BANKTRADE), 2, 6) = C.LFT0_GR_NO
LEFT JOIN CONCEPTO_BCRA CBCRA ON A.NRO_BANKTRADE = CBCRA.NRO_BANKTRADE
LEFT JOIN TIPO_CAMBIO D ON D.COD_BCRA = A.COD_BCRA AND CAST(D.FECHA AS DATE) = CAST(A.FECHA_OPERACION AS DATE)
LEFT JOIN TIPO_CAMBIO E ON E.COD_BCRA = A.COD_BCRA AND CAST(E.FECHA AS DATE) = DATE_ADD(CAST(A.FECHA_OPERACION AS DATE),-1)
LEFT JOIN TIPO_CAMBIO_USD F ON CAST(F.FECHA AS DATE) = CAST(A.FECHA_OPERACION AS DATE)
LEFT JOIN TIPO_CAMBIO_USD G ON CAST(G.FECHA AS DATE) = DATE_ADD(CAST(A.FECHA_OPERACION AS DATE),-1)
LEFT JOIN TIPO_CAMBIO_USD H ON CAST(H.FECHA AS DATE) = DATE_ADD(CAST(A.FECHA_OPERACION AS DATE),-2)
LEFT JOIN TIPO_CAMBIO_USD I ON CAST(I.FECHA AS DATE) = DATE_ADD(CAST(A.FECHA_OPERACION AS DATE),-3)
LEFT JOIN TIPO_CAMBIO_USD J ON CAST(J.FECHA AS DATE) = DATE_ADD(CAST(A.FECHA_OPERACION AS DATE),-4);



----------------------------------------------------------------------------------------------------------------------
-- TABLA TEMPORAL DE INTERFACES ORDENES DE PAGO CON ADHISION DE SWF DE BANCO, PARA LUEGO OBTENER NOMBRES, DOMS, ETC --
----------------------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V3;

CREATE TEMPORARY TABLE BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V3 AS
WITH TEXT_52A AS (
SELECT A.TEXT_VAL, A.SEQ
FROM BI_CORP_STAGING.SI02_SWFMSGBODY A
WHERE FIELD = '52A'
AND A.SEQ IN (SELECT DISTINCT B.SEQ FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP B)
AND SUB_FIELD = 3
AND CAST(A.SWIFT_DATE AS DATE) BETWEEN DATE_ADD(CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE),-90) AND CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE)
),
TEXT_54A AS (
SELECT A.TEXT_VAL, A.SEQ
FROM BI_CORP_STAGING.SI02_SWFMSGBODY A
WHERE FIELD = '54A'
AND A.SEQ IN (SELECT DISTINCT B.SEQ FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP B)
AND SUB_FIELD = 3
AND CAST(A.SWIFT_DATE AS DATE) BETWEEN DATE_ADD(CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE),-180) AND CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE)
),
TEXT_53A AS (
SELECT A.TEXT_VAL, A.SEQ
FROM BI_CORP_STAGING.SI02_SWFMSGBODY A
WHERE FIELD = '53A'
AND A.SEQ IN (SELECT DISTINCT B.SEQ FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP B)
AND SUB_FIELD = 3
AND CAST(A.SWIFT_DATE AS DATE) BETWEEN DATE_ADD(CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE),-180) AND CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE)
),
TEXT_MSG AS (
SELECT A.DEST AS TEXT_VAL, A.SEQ
FROM BI_CORP_STAGING.SI02_SWIFT_MSG_QUEUE A
WHERE A.SEQ IN (SELECT DISTINCT B.SEQ FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP B)
AND CAST(A.SWIFT_DATE AS DATE) BETWEEN DATE_ADD(CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE),-180) AND CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE)
)
SELECT
A.*
,CASE
	 WHEN A.SEQ IS NOT NULL THEN
		CASE
			WHEN B.TEXT_VAL IS NOT NULL THEN B.TEXT_VAL
			ELSE
				CASE
					WHEN C.TEXT_VAL IS NOT NULL THEN C.TEXT_VAL
					ELSE
						CASE
							WHEN D.TEXT_VAL IS NOT NULL THEN D.TEXT_VAL
							ELSE E.TEXT_VAL
						END
				END
		END

	 ELSE SUBSTR(A.BANCO_CORRE_COD, 1, 11)
 END AS V_TEXT
FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V2 A
LEFT JOIN TEXT_52A B ON A.SEQ = B.SEQ
LEFT JOIN TEXT_54A C ON A.SEQ = C.SEQ
LEFT JOIN TEXT_53A D ON A.SEQ = D.SEQ
LEFT JOIN TEXT_MSG E ON A.SEQ = E.SEQ;


------------------------------------------------------------------------------------------------
-- CREO TABLA FISICA INTERMEDIA EN STAGING - DROP DE TEMPORALES Y LIBERO MEMORIA EN LA SESION --
------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_STAGING.COMEX_INTERFACES_P_V3;

CREATE TABLE BI_CORP_STAGING.COMEX_INTERFACES_P_V3 AS
SELECT * FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V3;

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP;
DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V2;
DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V3;


-----------------------------------------------------------------------------------------------------------------
-- TABLA TEMPORAL DE INTERFACES ORDENES DE PAGO DONDE SE BUSCA NOMBRE, DOM, CIUDAD, PAIS Y COD DEL BANCO CORRE --
-----------------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V4;

CREATE TEMPORARY TABLE BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V4 AS
WITH SWF_BANCOS_1 AS (
SELECT DISTINCT
SUBSTR (NAME1, 1, 30) AS P_BANCO_CORRESP,
SUBSTR (CITY_HEADING, 1, 50) AS P_CIUDAD_BANCO_CORRESP,
SUBSTR (DIREC_FISICA1, 1, 50) AS P_DOM_BANCO_CORRESP,
A.NRO_BANKTRADE
FROM BI_CORP_STAGING.COMEX_RIO39_SWF_BANCOS SB
JOIN BI_CORP_STAGING.COMEX_INTERFACES_P_V3 A ON SB.BIC_CODE = SUBSTR (A.V_TEXT, 1, 8) AND SB.BRANCH_CODE = SUBSTR (A.V_TEXT, 9, 3)
WHERE LENGTH (TRIM (A.V_TEXT)) = 11 AND SB.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
),
SWF_BANCOS_2 AS (
SELECT DISTINCT
SUBSTR (NAME1, 1, 30) AS P_BANCO_CORRESP,
SUBSTR (CITY_HEADING, 1, 50) AS P_CIUDAD_BANCO_CORRESP,
SUBSTR (DIREC_FISICA1, 1, 50) AS P_DOM_BANCO_CORRESP,
A.NRO_BANKTRADE
FROM BI_CORP_STAGING.COMEX_RIO39_SWF_BANCOS SB
JOIN BI_CORP_STAGING.COMEX_INTERFACES_P_V3 A ON SB.BIC_CODE = SUBSTR (A.V_TEXT, 1, 8)
WHERE LENGTH (TRIM (A.V_TEXT)) = 11 AND SB.BRANCH_CODE = 'XXX' AND SB.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
),
SWF_BANCOS_3 AS (
SELECT DISTINCT
SUBSTR (NAME1, 1, 30) AS P_BANCO_CORRESP,
SUBSTR (CITY_HEADING, 1, 50) AS P_CIUDAD_BANCO_CORRESP,
SUBSTR (DIREC_FISICA1, 1, 50) AS P_DOM_BANCO_CORRESP,
A.NRO_BANKTRADE,
A.V_TEXT
FROM BI_CORP_STAGING.COMEX_RIO39_SWF_BANCOS SB
JOIN BI_CORP_STAGING.COMEX_INTERFACES_P_V3 A ON SB.BIC_CODE = SUBSTR (A.V_TEXT, 1, 8)
WHERE SB.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
)
SELECT DISTINCT
C.NRO_BANKTRADE AS NRO_BANKTRADE_1,
C.P_BANCO_CORRESP AS P_BANCO_CORRESP_1,
C.P_CIUDAD_BANCO_CORRESP AS P_CIUDAD_BANCO_CORRESP_1,
C.P_DOM_BANCO_CORRESP AS P_DOM_BANCO_CORRESP_1,
B.NRO_BANKTRADE AS NRO_BANKTRADE_2,
B.P_BANCO_CORRESP AS P_BANCO_CORRESP_2,
B.P_CIUDAD_BANCO_CORRESP AS P_CIUDAD_BANCO_CORRESP_2,
B.P_DOM_BANCO_CORRESP AS P_DOM_BANCO_CORRESP_2,
A.NRO_BANKTRADE AS NRO_BANKTRADE_3,
A.P_BANCO_CORRESP AS P_BANCO_CORRESP_3,
A.P_CIUDAD_BANCO_CORRESP AS P_CIUDAD_BANCO_CORRESP_3,
A.P_DOM_BANCO_CORRESP AS P_DOM_BANCO_CORRESP_3,
A.V_TEXT
FROM SWF_BANCOS_3 A
LEFT JOIN SWF_BANCOS_2 B ON A.NRO_BANKTRADE = B.NRO_BANKTRADE
LEFT JOIN SWF_BANCOS_1 C ON A.NRO_BANKTRADE = C.NRO_BANKTRADE;


----------------------------------------------------------------------------------------------------
-- TABLA TEMPORAL DE INTERFACES ORDENES DE PAGO COMPLETA INFORMACION DE BANCO CORRE A LAS ORDENES --
----------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V5;

CREATE TEMPORARY TABLE BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V5 AS
WITH SWF_BANCOS_TMP AS (
SELECT
CASE
	WHEN NRO_BANKTRADE_1 IS NOT NULL THEN NRO_BANKTRADE_1
	ELSE
		CASE
			WHEN NRO_BANKTRADE_2 IS NOT NULL THEN NRO_BANKTRADE_2
			ELSE NRO_BANKTRADE_3
		END
END AS NRO_BANKTRADE,
MAX(CASE
	WHEN NVL(NRO_BANKTRADE_1,-1) <> '-1' THEN CONCAT_WS('^', P_BANCO_CORRESP_1, P_CIUDAD_BANCO_CORRESP_1, P_DOM_BANCO_CORRESP_1)
	ELSE
		CASE
			WHEN NVL(NRO_BANKTRADE_2,-1) <> '-1' THEN CONCAT_WS('^', P_BANCO_CORRESP_2, P_CIUDAD_BANCO_CORRESP_2, P_DOM_BANCO_CORRESP_2)
			ELSE CONCAT_WS('^', P_BANCO_CORRESP_3, P_CIUDAD_BANCO_CORRESP_3, P_DOM_BANCO_CORRESP_3)
		END
END) AS CONCAT_BANCOS,
MAX(V_TEXT) AS V_TEXT
FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V4
GROUP BY
CASE
	WHEN NRO_BANKTRADE_1 IS NOT NULL THEN NRO_BANKTRADE_1
	ELSE
		CASE
			WHEN NRO_BANKTRADE_2 IS NOT NULL THEN NRO_BANKTRADE_2
			ELSE NRO_BANKTRADE_3
		END
END
),
SPLIT_SWIFT_BANCO AS(
SELECT A.*
, SPLIT(B.CONCAT_BANCOS, '\\\^')[0] AS V_BANCO_CORRE
, SPLIT(B.CONCAT_BANCOS, '\\\^')[1] AS V_BANCO_CORRE_CIUDAD
, SPLIT(B.CONCAT_BANCOS, '\\\^')[2] AS V_BANCO_CORRE_DOM
, C.DESCRIPCION AS V_BANCO_CORRE_PAIS
FROM BI_CORP_STAGING.COMEX_INTERFACES_P_V3 A
LEFT JOIN SWF_BANCOS_TMP B ON A.NRO_BANKTRADE = B.NRO_BANKTRADE AND A.V_TEXT = B.V_TEXT
LEFT JOIN BI_CORP_STAGING.COMEX_RIO39_PAISES C ON C.COD_BCRA = SUBSTR(A.V_TEXT, 5, 2) AND C.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
)
SELECT DISTINCT * FROM SPLIT_SWIFT_BANCO;

----------------------------------
-- TABLA TEMPORAL CUENTAS COMEX --
----------------------------------

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_CUENTAS;

CREATE TEMPORARY TABLE BI_CORP_COMMON.COMEX_CUENTAS AS
SELECT
CTAS.CDCENCON, CTAS.CDSUCURS, CTAS.CDPRODUC, CTAS.CDSUBPRO,
CTAS.NUCUENTA, CTAS.NUORDENX, CTAS.CDDIVISA, CTAS.FHALTAXX,
CTAS.FHBAJAXX, CTAS.NURENOVA, CTAS.CDSTATUS, CTAS.CDTIPOJU,
CTAS.FHINICIO, CTAS.FHVENCTO, CTAS.CDSUCPRO, CTAS.CDPROMOT,
CTAS.IMLIMITE, CTAS.IMIMPOSI, CTAS.CDPEREXT, CTAS.NUARXXXX,
CTAS.CDCEMOTI, CTAS.FHCAMTIP, CTAS.IMNOINVE, CTAS.NBDOMICI,
CTAS.NBDOMIAM, CTAS.CDPOSTAL, CTAS.NBPOBLAC, CTAS.NBPOBLAA,
CTAS.NBPROVIN, CTAS.NBPAISXX, CTAS.NBORDENX, CTAS.MCRETCOR,
INFO.NUP
FROM BI_CORP_STAGING.SI02_T0AKCTAS CTAS
LEFT JOIN BI_CORP_STAGING.SI02_INFO_BANCOS INFO ON CTAS.CDCENCON = INFO.CDCENCON AND CTAS.CDSUCURS = INFO.CDSUCURS AND CTAS.NUCUENTA = INFO.NUCUENTA AND CTAS.CDDIVISA = INFO.CDDIVISA AND INFO.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
WHERE CTAS.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
;


---------------------------------------------------------------------------------------------------------------
-- TABLA TEMPORAL DE INTERFACES ORDENES DE PAGO CON TIPO DE CAMBIO ESPECIFICO DE LA OPERACION Y EL BANCO RIO --
---------------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V6;

CREATE TEMPORARY TABLE BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V6 AS
WITH IMPORTE_PESOS AS (
SELECT VO.TOTALBRUTOCLI1 AS V_IMP_OPERAC_PESOS, A.NRO_BKT, A.SECUENCIA
FROM BI_CORP_STAGING.RIO4_OPERACIONES VO
JOIN BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V5 A ON VO.OPERACIONREF = A.NRO_BOLETO
WHERE VO.TIPOOP = 'FXCTEC' AND CAST(VO.FECHAOP AS DATE) BETWEEN DATE_ADD(CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE),-5) AND CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE)
),
NOMBRE_BANCO AS(
SELECT DISTINCT UPPER (SUBSTR (A.NBORDENX, 1, 30)) AS P_BCO_CORR_RIO_NOM, A.NUCUENTA AS NUMERO
FROM BI_CORP_COMMON.COMEX_CUENTAS A
WHERE A.NUCUENTA IN (SELECT DISTINCT NUMERO FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V5)
)
SELECT
A.*
,CASE
	WHEN A.ACCOUNTNO_MONEDA = '002' THEN
		CASE
			WHEN A.COD_MONEDA <> '002' THEN B.V_IMP_OPERAC_PESOS / A.IMP_ALTA_OPERAC_ME
			ELSE 0
		END
	ELSE A.IMP_TIPO_CAMBIO_OPERAC
END AS V_IMP_TIPO_CAMBIO_OPERAC
,C.P_BCO_CORR_RIO_NOM
FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V5 A
LEFT JOIN IMPORTE_PESOS B ON A.NRO_BKT = B.NRO_BKT AND A.SECUENCIA = B.SECUENCIA
LEFT JOIN NOMBRE_BANCO C ON A.NUMERO = C.NUMERO;


--------------------------------------------------------------------------------------------------
-- CREO TABLA FISICA INTERFACES_P EN STAGING - DROP DE TEMPORALES Y LIBERO MEMORIA EN LA SESION --
--------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_STAGING.COMEX_INTERFACES_P;


CREATE TABLE BI_CORP_STAGING.COMEX_INTERFACES_P AS
SELECT DISTINCT
PROD_CTBLE AS PROD_CTBLE,
COD_MOV AS COD_MOV,
SUBCOD_MOV AS SUBCOD_MOV,
CAST(FECHA_OPERACION AS DATE) AS FECHA_OPERACION,
CAST(FECHA_PAGO AS DATE) AS FECHA_PAGO,
CAST(FECHA_CARGA AS DATE) AS FECHA_CARGA,
CAST(FECHA_VTO AS DATE) AS FECHA_VENCIMIENTO,
IMP_ALTA_OPERAC_ME AS IMP_ALTA_OPERAC_ME,
IMP_OPERAC_PESOS AS IMP_OPERAC_PESOS,
V_IMP_TIPO_CAMBIO_DIA AS IMP_TIPO_CAMBIO_DIA,
V_IMP_TIPO_CAMBIO_OPERAC AS IMP_TIPO_CAMBIO_OPERAC,
ESP_CANT AS ESP_CANT,
ESP_TIPO AS ESP_TIPO,
COD_MONEDA AS COD_MONEDA,
CTA_TIPO AS CTA_TIPO,
CTA_OPERAC AS CTA_OPERAC,
CTA_SUC AS CTA_SUC,
ACCOUNTNO AS ACCOUNTNO,
V_NRO_OPERAC AS NRO_OPERAC,
VTIPO_OPER AS TIPO_OPER,
NRO_BKT AS NRO_BKT,
NRO_CUENTA_BANCA_PRIVADA AS NRO_CTA_BANCA_PRIVADA,
CASE WHEN SUBSTR(V_BANCO_CORRE,1,30) IN ('null', '') THEN NULL
	 ELSE SUBSTR(V_BANCO_CORRE,1,30)
END AS BANCO_CORRE,
CASE WHEN SUBSTR(V_TEXT,1,11) IN ('null', '') THEN NULL
	 ELSE SUBSTR(V_TEXT,1,11)
END AS BANCO_CORRE_COD,
CASE WHEN SUBSTR(SUBSTR(V_TEXT,5,2),1,2) IN ('null', '') THEN NULL
	 ELSE SUBSTR(SUBSTR(V_TEXT,5,2),1,2)
END AS BANCO_CORRE_COD_PAIS,
CASE WHEN SUBSTR(V_BANCO_CORRE_PAIS,1,35) IN ('null', '') THEN NULL
	 ELSE SUBSTR(V_BANCO_CORRE_PAIS,1,35)
END AS BANCO_CORRE_PAIS,
CASE WHEN SUBSTR(V_BANCO_CORRE_CIUDAD,1,50) IN ('null', '') THEN NULL
	 ELSE SUBSTR(V_BANCO_CORRE_CIUDAD,1,50)
END AS BANCO_CORRE_CIUDAD,
CASE WHEN SUBSTR(V_BANCO_CORRE_DOM,1,50)  IN ('null', '') THEN NULL
	 ELSE SUBSTR(V_BANCO_CORRE_DOM,1,50)
END AS BANCO_CORRE_DOM,
CASE WHEN SUBSTR(BENEFI_EXTERIOR,1,50) IN ('null', '') THEN NULL
	 ELSE SUBSTR(BENEFI_EXTERIOR,1,50)
END AS BENEFI_EXTERIOR,
CASE WHEN BENEFI_COD_PAIS  IN ('null', '') THEN NULL
	 ELSE BENEFI_COD_PAIS
END AS BENEFI_COD_PAIS,
CASE WHEN BENEFI_DOM IN ('null', '') THEN NULL
	 ELSE BENEFI_DOM
END AS BENEFI_DOM,
ORIGEN AS ORIGEN,
'901' AS TIPO_MOV,
'{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS FECHA_PROC,
'{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS FECHA_PROCESO,
TRIM(TRABAJADOR1) AS TRABAJADOR1,
TRIM(TRABAJADOR2) AS TRABAJADOR2,
MARCA_ERROR AS MARCA_ERROR,
'A' AS ESTADO_REG,
'N' AS MARCA_BCA_PRIVADA,
P_BCO_CORR_RIO_NOM AS BCO_CORR_RIO,
SUBSTR(V_BANCO_CORRE,1,30) AS BCO_CORR_NOM,
SUBSTR(SUBSTR(V_TEXT,5,2),1,2) AS BCO_CORR_NOM_COD_PAIS,
V_SUBPRODUCTO AS SUBPRODUCTO,
NUP AS NUP,
SUBSTR(NOMBRE_CLIENTE_BANCO,1,40) AS NOMBRE_CLIENTE_BANCO,
ID_BOLETO AS ID_BOLETO,
SECTOR AS SECTOR,
CASE
	WHEN TRIM(UPPER(V_SUBPRODUCTO)) = 'OPE' THEN 'P97'
	WHEN TRIM(UPPER(V_SUBPRODUCTO)) = 'OPS' THEN 'P99'
	WHEN TRIM(UPPER(V_SUBPRODUCTO)) IN ('TTI','TTS','TTA') THEN 'T98'
	ELSE NULL
END AS COD_SUBPRODUCTO,
L_CONCEPTOBCRA AS CONCEPTOBCRA,
ACCOUNTNO_MONEDA AS CUENTA_EN
FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V6;


DROP TABLE IF EXISTS BI_CORP_STAGING.COMEX_INTERFACES_V3;
DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_CUENTAS;
DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V4;
DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V5;
DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V6;

"