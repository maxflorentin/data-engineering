"
SET mapred.job.queue.name=root.dataeng;
set hive.exec.dynamic.partition.mode=nonstrict;

--------------------------------------------------
-- TABLA TEMPORAL DE INTERFACES TRANSFERENCIAS  --
--------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP;

CREATE TABLE BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP as
with tabla_distinct as (
SELECT
'' ID_INTERFACES,
P.SECUENCIA,
'50' PROD_CTBLE,
'00' COD_MOV,
'00' SUBCOD_MOV,
O.NUMERO,
LPAD (TRIM (O.NUP), 8, '0') NUP,
O.COD_TIPO,
P.FECHA_LIQ FECHA_OPERACION,
P.F_VERIF FECHA_PAGO,
P.F_CARGA FECHA_CARGA,
P.F_VENCIMIENTO_LIQ FECHA_VTO,
P.IMPORTE IMP_ALTA_OPERAC_ME,
CASE
	WHEN P.MONEDA = P.ACCOUNTNO_MONEDA THEN (B.COTIZACION * P.IMPORTE )
	ELSE D.IMPORTE_PESOS
END AS IMP_OPERAC_PESOS,
0 IMP_TIPO_CAMBIO_DIA,
B.COTIZACION IMP_TIPO_CAMBIO_OPERAC,
P.IMPORTE ESP_CANT,
P.MONEDA ESP_TIPO,
P.MONEDA COD_MONEDA,
SUBSTR (P.ACCOUNTNO, 8, 1) CTA_TIPO,
SUBSTR (P.ACCOUNTNO, 9, 7) CTA_OPERAC,
SUBSTR (P.ACCOUNTNO, 5, 3) CTA_SUC,
P.ACCOUNTNO ACCOUNTNO,
TRIM(O.NRO_BANKTRADE) AS NRO_BANKTRADE,
P.SECUENCIA SEC,
CASE
	WHEN O.MONCOD ='092' THEN '121'
	ELSE CASE
			 WHEN O.COD_TIPO = '5' THEN '102'
			 ELSE '121'
		 END
END AS TIPO_OPER,
P.LIQ_BKT NRO_BKT,
O.CUENTA_BP NRO_CTA_BANCA_PRIVADA,
'' NRO_CORRELATIVO,
'' BANCO_CORRE,
'' BANCO_CORRE_COD,
'' BANCO_CORRE_COD_PAIS,
'' BANCO_CORRE_PAIS,
'' BANCO_CORRE_CIUDAD,
'' BANCO_CORRE_DOM,
SUBSTR (O.BENEFICIARIO, 1, 50) BENEFI_EXTERIOR,
SUBSTR (O.PAIS_BENEF, 1, 2) BENEFI_COD_PAIS,
SUBSTR (T.BENEF_DOMIC, 1, 100) BENEFI_DOM,
CASE
	WHEN SUBSTR (O.NRO_BANKTRADE, 1, 1) = 'W' THEN 'BKT'
    ELSE
		CASE
			WHEN SUBSTR (O.NRO_BANKTRADE, 1, 2) IN ('T4','P1','P2') THEN 'BKT'
			ELSE 'CMX'
		END
END ORIGEN,
P.USU_MODIF TRABAJADOR1,
P.USU_VERIF TRABAJADOR2,
'N' MARCA_ERROR,
B.NRO_BOLETO,
SUBSTR (O.ORDENANTE, 1, 40) NOMBRE_CLIENTE_BANCO,
P.ID_BOLETO AS ID_BOLETO,
CASE
	WHEN B.SECTOR = 1 THEN 'IMPORTACION'
	WHEN B.SECTOR = 2 THEN 'EXPORTACION'
	WHEN B.SECTOR = 3 THEN 'SERVICIOS'
END AS SECTOR,
P.CONCEPTOBCRA,
COALESCE(P.ACCOUNTNO_MONEDA,'080') ACCOUNTNO_MONEDA,
O.COD_OPS
FROM BI_CORP_STAGING.COMEX_RIO39_OPP_OPS_PAGOS P
JOIN BI_CORP_STAGING.COMEX_RIO39_OPP_OPS O ON P.COD_OPS = O.COD_OPS AND O.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
JOIN BI_CORP_STAGING.COMEX_RIO39_BOLETOS_SAM B ON B.ID_BOL = P.ID_BOLETO AND B.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
LEFT OUTER JOIN BI_CORP_STAGING.COMEX_RIO39_OPP_OPS_PAGOS_DET D ON P.SECUENCIA = D.SECUENCIA AND P.COD_OPS = D.COD_OPS AND D.CONCEPTO = 'BRUTO' AND D.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
JOIN BI_CORP_STAGING.COMEX_RIO39_OPP_TRF T ON P.SECUENCIA = T.SECUENCIA AND P.COD_OPS = T.COD_OPS AND T.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
LEFT OUTER JOIN BI_CORP_STAGING.COMEX_RIO39_SWF_BANCOS S ON SUBSTR (T.BCO_PAGADOR_CORRE, 1, 8) = S.BIC_CODE AND SUBSTR (T.BCO_PAGADOR_CORRE, 9, 3) = S.BRANCH_CODE AND S.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
WHERE (P.ORIGEN_PAGO = 'null' OR P.ORIGEN_PAGO IS NULL)
AND P.COD_EST_PAGO IN (2, 24)
AND O.COD_PRODUCTO = 2
AND P.SECUENCIA = 1
AND P.COD_EVENTO = 'COBTRF'
AND P.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
UNION ALL
SELECT
'' ID_INTERFACES,
1 SECUENCIA,
'50' PROD_CTBLE,
'00' COD_MOV,
'00' SUBCOD_MOV,
O.NUMERO,
LPAD (TRIM(O.NUP), 8, '0') NUP,
O.COD_TIPO,
O.FECHA_LIQ FECHA_OPERACION,
O.FECHA_VERIFICA FECHA_PAGO,
O.FECHA FECHA_CARGA,
'' FECHA_VTO,
O.IMPORTE IMP_ALTA_OPERAC_ME,
0 IMP_OPERAC_PESOS,
0 IMP_TIPO_CAMBIO_DIA,
L.LFT01_EXCH_RT_DISP IMP_TIPO_CAMBIO_OPERAC,
O.IMPORTE ESP_CANT,
O.MONCOD ESP_TIPO,
O.MONCOD COD_MONEDA,
SUBSTR (O.ACCT_NO, 8, 1) CTA_TIPO,
SUBSTR (O.ACCT_NO, 9, 7) CTA_OPERAC,
SUBSTR (O.ACCT_NO, 5, 3) CTA_SUC,
O.ACCT_NO ACCOUNTNO,
TRIM(O.NRO_BANKTRADE) AS NRO_BANKTRADE,
O.OPP_MAX_SEQ SEC,
CASE
	WHEN O.MONCOD = '092' THEN '121'
	ELSE CASE
			 WHEN O.COD_TIPO = 5 THEN '102'
			 ELSE '121'
		 END
END AS TIPO_OPER,
O.NRO_BANKTRADE NRO_BKT,
SUBSTR (LF.LFT0_CS_SD_NM_ADL4, 1, 8) NRO_CTA_BANCA_PRIVADA,
'' NRO_CORRELATIVO,
'' BANCO_CORRE,
SUBSTR (LF.LFT0_BENE_RCV_SWID, 1, 11) BANCO_CORRE_COD,
SUBSTR (PS.COD_BCRA, 1, 2) BANCO_CORRE_COD_PAIS,
SUBSTR (PS.DESCRIPCION, 1, 20) BANCO_CORRE_PAIS,
'' BANCO_CORRE_CIUDAD,
'' BANCO_CORRE_DOM,
CASE WHEN SUBSTR (LT.LFT02_BN_ORD_NADD1, 1, 1) = '/' THEN SUBSTR (LT.LFT02_BN_ORD_NADD2, 1, 50)
	 ELSE SUBSTR (LT.LFT02_BN_ORD_NADD1, 1, 50)
END AS BENEFI_EXTERIOR,
SUBSTR (LT.LFT02_BN_ORD_NADD4, 1, 2) BENEFI_COD_PAIS,
CASE WHEN SUBSTR (LT.LFT02_BN_ORD_NADD1, 1, 1) = '/' THEN SUBSTR (LT.LFT02_BN_ORD_NADD2, 1, 100)
	 ELSE SUBSTR (LT.LFT02_BN_ORD_NADD3, 1, 100)
END AS BENEFI_DOM,
CASE
	WHEN SUBSTR (O.NRO_BANKTRADE, 1, 1) = 'W' THEN 'BKT'
    ELSE
		CASE
			WHEN SUBSTR (O.NRO_BANKTRADE, 1, 2) IN ('T4','P1','P2') THEN 'BKT'
			ELSE 'CMX'
		END
END AS ORIGEN,
O.USUARIO TRABAJADOR1,
O.USUARIO_VERIFICA TRABAJADOR2,
'N' MARCA_ERROR,
'' NRO_BOLETO,
SUBSTR (O.ORDENANTE, 1, 40) NOMBRE_CLIENTE_BANCO,
cast(null as string) AS ID_BOLETO,
CASE
	WHEN LF.LFT0_SUFFIX = '98' THEN 'IMPORTACION'
	ELSE 'SERVICIOS'
END AS SECTOR,
cast(null as string) CONCEPTOBCRA,
'000' ACCOUNTNO_MONEDA,
O.COD_OPS
FROM BI_CORP_STAGING.COMEX_RIO39_OPP_OPS O
LEFT OUTER JOIN BI_CORP_STAGING.COMEX_RIO39_PAISES PS ON O.PAIS_ORIGEN = PS.COD_BCRA AND PS.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
JOIN BI_CORP_STAGING.COMEX_RIO39_LFT01 L ON SUBSTR( TRIM(O.NRO_BANKTRADE), 2) = L.LFT01_GR_NO AND L.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
JOIN BI_CORP_STAGING.COMEX_RIO39_LFT00 LF ON L.LFT01_GR_NO = LF.LFT0_GR_NO AND LF.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
JOIN BI_CORP_STAGING.COMEX_RIO39_LFT02 LT ON LF.LFT0_GR_NO = LT.LFT02_GR_NO
WHERE O.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
AND O.COD_ESTADO IN (2, 24)
AND O.COD_PRODUCTO = 2
AND L.LFT01_GR_PREFIX = 'T'
)
SELECT DISTINCT * FROM TABLA_DISTINCT;

----------------------------------------------------------------------------------------
-- TABLA TEMPORAL DE INTERFACES TRANSFERENCIAS QUE COMPLETA DATOS DE BANCO CORRE T400 --
----------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP_T400;

CREATE TEMPORARY TABLE BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP_T400 AS
WITH B_TRADE AS (
SELECT DISTINCT NRO_BANKTRADE, BANCO_CORRE, BANCO_CORRE_COD,
CASE WHEN LENGTH(NRO_BANKTRADE) = 10 THEN SUBSTR(NRO_BANKTRADE, 1, 10) END AS NRO_BANKTRADE10,
CASE WHEN LENGTH(NRO_BANKTRADE) = 7 THEN SUBSTR(NRO_BANKTRADE, 1, 7) END AS NRO_BANKTRADE7
FROM BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP
WHERE SUBSTR (NRO_BANKTRADE, 1, 2) = 'T4'
),
SEQ_QUEUE AS (
SELECT B.SEQ, B.QUEUE, BT.NRO_BANKTRADE
FROM BI_CORP_STAGING.SI02_SWFMSGBODY B
JOIN BI_CORP_STAGING.SI02_SWIFT_MSG_QUEUE M ON B.SEQ = M.SEQ
JOIN B_TRADE BT ON BT.NRO_BANKTRADE10 = SUBSTR(B.TEXT_VAL, 1, 10)
WHERE B.FIELD = '20'
AND (M.SWIFT_MSG = 103 OR M.SWIFT_MSG = 202)
AND CAST(M.SWIFT_DATE AS DATE) BETWEEN DATE_ADD(CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE),-180) AND CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE)
UNION ALL
SELECT B.SEQ, B.QUEUE, BT.NRO_BANKTRADE
FROM BI_CORP_STAGING.SI02_SWFMSGBODY B
JOIN BI_CORP_STAGING.SI02_SWIFT_MSG_QUEUE M ON B.SEQ = M.SEQ
JOIN B_TRADE BT ON BT.NRO_BANKTRADE7 = SUBSTR(B.TEXT_VAL, 1, 7)
WHERE B.FIELD = '20'
AND (M.SWIFT_MSG = 103 OR M.SWIFT_MSG = 202)
AND CAST(M.SWIFT_DATE AS DATE) BETWEEN DATE_ADD(CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE),-180) AND CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE)
),
TEXT_VAL AS (
SELECT A.TEXT_VAL AS V_TEXT_57, B.TEXT_VAL AS V_TEXT_58, C.TEXT_VAL AS V_TEXT_56, SB.NRO_BANKTRADE
FROM SEQ_QUEUE SB
LEFT JOIN BI_CORP_STAGING.SI02_SWFMSGBODY A ON A.SEQ = SB.SEQ AND A.QUEUE = SB.QUEUE AND A.FIELD = '57A' AND A.SUB_FIELD = 3 AND A.SUB_LINE = 1
LEFT JOIN BI_CORP_STAGING.SI02_SWFMSGBODY B ON B.SEQ = SB.SEQ AND B.QUEUE = SB.QUEUE AND B.FIELD = '58A' AND B.SUB_FIELD = 3 AND B.SUB_LINE = 1
LEFT JOIN BI_CORP_STAGING.SI02_SWFMSGBODY C ON C.SEQ = SB.SEQ AND C.QUEUE = SB.QUEUE AND C.FIELD = '56A' AND C.SUB_FIELD = 3 AND C.SUB_LINE = 1
),
TEXT_ELSE AS(
SELECT SUBSTR (A.INCOMING_KEY, 14, 11) AS V_TEXT_ELSE, SB.NRO_BANKTRADE
FROM SEQ_QUEUE SB
LEFT JOIN BI_CORP_STAGING.SI02_SWIFT_MSG_QUEUE A ON A.SEQ = SB.SEQ AND A.QUEUE = SB.QUEUE
)
SELECT
BT.NRO_BANKTRADE,
BT.BANCO_CORRE,
CASE WHEN BT.BANCO_CORRE_COD IS NOT NULL OR BT.BANCO_CORRE_COD <> 'null' THEN BT.BANCO_CORRE_COD
	 ELSE
		 CASE
			 WHEN A.V_TEXT_57 IS NOT NULL OR A.V_TEXT_57 <> 'null' OR A.V_TEXT_57 <> '' THEN A.V_TEXT_57
			 ELSE
				 CASE
					 WHEN A.V_TEXT_58 IS NOT NULL OR A.V_TEXT_58 <> 'null' OR A.V_TEXT_58 <> '' THEN A.V_TEXT_58
					 ELSE
						 CASE
							 WHEN A.V_TEXT_56 IS NOT NULL OR A.V_TEXT_56 <> 'null' OR A.V_TEXT_56 <> '' THEN A.V_TEXT_56
							 ELSE B.V_TEXT_ELSE
						 END
				 END
		 END
END AS V_BANCO_CORRE_COD
FROM B_TRADE BT
LEFT JOIN TEXT_VAL A ON BT.NRO_BANKTRADE = A.NRO_BANKTRADE
LEFT JOIN TEXT_ELSE B ON BT.NRO_BANKTRADE = B.NRO_BANKTRADE;



----------------------------------------------------------------------------------------------
-- TABLA TEMPORAL DE INTERFACES TRANSFERENCIAS QUE COMPLETA DATOS DE BANCO CORRE QUE SON FW --
----------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP_V2;

CREATE TEMPORARY TABLE BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP_V2 AS
WITH BCO_FW_CORRE AS(
SELECT B.*, A.BANCO_RECEPTOR AS L_BANCO_CORRE_COD
FROM BI_CORP_STAGING.COMEX_RIO39_OPP_TRF A
JOIN  BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP B ON A.COD_OPS = B.COD_OPS
WHERE A.TIPO_BANCO_RECEPTOR = 2
AND A.SECUENCIA = 1
AND A.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
)
SELECT A.*,
SUBSTR (B.NAME1, 1, 30) V_BANCO_CORRE,
CASE WHEN B.CITY_HEADING IN ('null','NULL','') THEN cast(null as string) ELSE B.CITY_HEADING END AS V_BANCO_CORRE_CIUDAD,
SUBSTR (CONCAT(CASE WHEN B.DIREC_FISICA1 IN ('null','NULL','') THEN cast(null as string) ELSE B.DIREC_FISICA1 END,CASE WHEN B.DIREC_FISICA2 IN ('null','NULL','') THEN cast(null as string) ELSE B.DIREC_FISICA2 END), 1, 50) V_BANCO_CORRE_DOM,
C.DESCRIPCION V_BANCO_CORRE_PAIS,
'US' V_BANCO_CORRE_COD_PAIS
FROM BCO_FW_CORRE A
LEFT JOIN BI_CORP_STAGING.COMEX_RIO39_SWF_BANCOS B ON A.L_BANCO_CORRE_COD = B.CODIGOBANCOPAIS AND B.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
LEFT JOIN BI_CORP_STAGING.COMEX_RIO39_PAISES C ON C.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AND C.COD_BCRA = 'US';



----------------------------------------------------------------------------------------
-- TABLA TEMPORAL DE INTERFACES TRANSFERENCIAS QUE COMPLETA DATOS DE BANCO CORRE T500 --
----------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP_V3;

CREATE TEMPORARY TABLE BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP_V3 AS
WITH BCO_RECEPTOR AS(
SELECT A.BANCO_RECEPTOR AS L_BANCO_CORRE_COD, B.NRO_BANKTRADE
FROM BI_CORP_STAGING.COMEX_RIO39_OPP_TRF A
JOIN BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP B ON A.COD_OPS = B.COD_OPS
WHERE A.TIPO_BANCO_RECEPTOR = 1
AND A.SECUENCIA = 1
AND A.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
AND SUBSTR (B.NRO_BANKTRADE, 1, 2) <> 'T4'
),
BCO_INTERMEDIARIO AS(
SELECT A.BANCO_INTERMEDIARIO  AS L_BANCO_CORRE_COD, B.NRO_BANKTRADE
FROM BI_CORP_STAGING.COMEX_RIO39_OPP_TRF A
JOIN BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP B ON A.COD_OPS = B.COD_OPS
WHERE A.TIPO_BANCO_INTERMEDIARIO = 1
AND A.SECUENCIA = 1
AND A.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
AND SUBSTR (B.NRO_BANKTRADE, 1, 2) <> 'T4'
),
BCO_PAGADOR AS(
SELECT A.BCO_PAGADOR_CORRE AS L_BANCO_CORRE_COD, B.NRO_BANKTRADE
FROM BI_CORP_STAGING.COMEX_RIO39_OPP_TRF A
JOIN BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP B ON A.COD_OPS = B.COD_OPS
WHERE A.SECUENCIA = 1
AND A.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
AND SUBSTR (B.NRO_BANKTRADE, 1, 2) <> 'T4'
),
BCO_FW AS (
SELECT B.NRO_BANKTRADE
FROM BI_CORP_STAGING.COMEX_RIO39_OPP_TRF A
JOIN BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP B ON A.COD_OPS = B.COD_OPS
WHERE A.TIPO_BANCO_RECEPTOR = 2
AND A.SECUENCIA = 1
AND A.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
)
SELECT A.*,
CASE WHEN B.L_BANCO_CORRE_COD IS NOT NULL THEN B.L_BANCO_CORRE_COD
	 ELSE
	 	 CASE WHEN C.L_BANCO_CORRE_COD IS NOT NULL THEN C.L_BANCO_CORRE_COD
	 	 	  ELSE D.L_BANCO_CORRE_COD
	 	 END
END AS L_BANCO_CORRE_COD
FROM BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP A
LEFT JOIN BCO_RECEPTOR B ON A.NRO_BANKTRADE = B.NRO_BANKTRADE
LEFT JOIN BCO_INTERMEDIARIO C ON A.NRO_BANKTRADE = C.NRO_BANKTRADE
LEFT JOIN BCO_PAGADOR D ON A.NRO_BANKTRADE = D.NRO_BANKTRADE
LEFT JOIN BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP_T400
WHERE A.NRO_BANKTRADE NOT IN (SELECT DISTINCT NRO_BANKTRADE FROM BCO_FW);


------------------------------------------------------------------------------------------------
-- CREO TABLA FISICA INTERMEDIA EN STAGING - DROP DE TEMPORALES Y LIBERO MEMORIA EN LA SESION --
------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_STAGING.COMEX_INTERFACES_TRF_V3;

CREATE TABLE BI_CORP_STAGING.COMEX_INTERFACES_TRF_V3 AS
SELECT * FROM BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP_V3;

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP;
DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP_T400;
DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP_V3;

-----------------------------------------------------------------------------------------------------------------
-- TABLA TEMPORAL DE INTERFACES ORDENES DE PAGO DONDE SE BUSCA NOMBRE, DOM, CIUDAD, PAIS Y COD DEL BANCO CORRE --
-----------------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP_V4;

CREATE TEMPORARY TABLE BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP_V4 AS
WITH SWF_BANCOS_1 AS (
SELECT DISTINCT
SUBSTR (NAME1, 1, 30) AS P_BANCO_CORRESP,
SUBSTR (CITY_HEADING, 1, 50) AS P_CIUDAD_BANCO_CORRESP,
SUBSTR (DIREC_FISICA1, 1, 50) AS P_DOM_BANCO_CORRESP,
A.NRO_BANKTRADE
FROM BI_CORP_STAGING.COMEX_RIO39_SWF_BANCOS SB
JOIN BI_CORP_STAGING.COMEX_INTERFACES_TRF_V3 A ON SB.BIC_CODE = SUBSTR (A.l_banco_corre_cod, 1, 8) AND SB.BRANCH_CODE = SUBSTR (A.l_banco_corre_cod, 9, 3)
WHERE LENGTH (TRIM (A.l_banco_corre_cod)) = 11 AND SB.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
),
SWF_BANCOS_2 AS (
SELECT DISTINCT
SUBSTR (NAME1, 1, 30) AS P_BANCO_CORRESP,
SUBSTR (CITY_HEADING, 1, 50) AS P_CIUDAD_BANCO_CORRESP,
SUBSTR (DIREC_FISICA1, 1, 50) AS P_DOM_BANCO_CORRESP,
A.NRO_BANKTRADE
FROM BI_CORP_STAGING.COMEX_RIO39_SWF_BANCOS SB
JOIN BI_CORP_STAGING.COMEX_INTERFACES_TRF_V3 A ON SB.BIC_CODE = SUBSTR (A.l_banco_corre_cod, 1, 8)
WHERE LENGTH (TRIM (A.l_banco_corre_cod)) = 11 AND SB.BRANCH_CODE = 'XXX' AND SB.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' --AND  SUBSTR (DIREC_FISICA1, 1, 50) <> 'null'
),
SWF_BANCOS_3 AS (
SELECT DISTINCT
SUBSTR (NAME1, 1, 30) AS P_BANCO_CORRESP,
SUBSTR (CITY_HEADING, 1, 50) AS P_CIUDAD_BANCO_CORRESP,
SUBSTR (DIREC_FISICA1, 1, 50) AS P_DOM_BANCO_CORRESP,
A.NRO_BANKTRADE,
A.l_banco_corre_cod
FROM BI_CORP_STAGING.COMEX_RIO39_SWF_BANCOS SB
JOIN BI_CORP_STAGING.COMEX_INTERFACES_TRF_V3 A ON SB.BIC_CODE = SUBSTR (A.l_banco_corre_cod, 1, 8)
WHERE SB.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
)
SELECT DISTINCT
C.NRO_BANKTRADE AS NRO_BANKTRADE_1,
C.P_BANCO_CORRESP AS P_BANCO_CORRESP_1,
C.P_CIUDAD_BANCO_CORRESP AS P_CIUDAD_BANCO_CORRESP_1,
C.P_DOM_BANCO_CORRESP AS P_DOM_BANCO_CORRESP_1,
B.NRO_BANKTRADE AS NRO_BANKTRADE_2,
B.P_BANCO_CORRESP AS P_BANCO_CORRESP_2,
B.P_CIUDAD_BANCO_CORRESP AS P_CIUDAD_BANCO_CORRESP_2,
B.P_DOM_BANCO_CORRESP AS P_DOM_BANCO_CORRESP_2,
A.NRO_BANKTRADE AS NRO_BANKTRADE_3,
A.P_BANCO_CORRESP AS P_BANCO_CORRESP_3,
A.P_CIUDAD_BANCO_CORRESP AS P_CIUDAD_BANCO_CORRESP_3,
A.P_DOM_BANCO_CORRESP AS P_DOM_BANCO_CORRESP_3,
A.l_banco_corre_cod
FROM SWF_BANCOS_3 A
LEFT JOIN SWF_BANCOS_2 B ON A.NRO_BANKTRADE = B.NRO_BANKTRADE
LEFT JOIN SWF_BANCOS_1 C ON A.NRO_BANKTRADE = C.NRO_BANKTRADE;

----------------------------------------------------------------------------------------------------------
-- TABLA TEMPORAL DE INTERFACES TRANSFERENCIAS COMPLETA INFORMACION DE BANCO CORRE A LAS TRANSFERENCIAS --
----------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V5;

CREATE TEMPORARY TABLE BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V5 AS
WITH SWF_BANCOS_TMP AS (
SELECT
CASE
	WHEN NRO_BANKTRADE_1 IS NOT NULL THEN NRO_BANKTRADE_1
	ELSE
		CASE
			WHEN NRO_BANKTRADE_2 IS NOT NULL THEN NRO_BANKTRADE_2
			ELSE NRO_BANKTRADE_3
		END
END AS NRO_BANKTRADE,
MAX(CASE
	WHEN NVL(NRO_BANKTRADE_1,-1) <> '-1' THEN CONCAT_WS('^', P_BANCO_CORRESP_1, P_CIUDAD_BANCO_CORRESP_1, P_DOM_BANCO_CORRESP_1)
	ELSE
		CASE
			WHEN NVL(NRO_BANKTRADE_2,-1) <> '-1' THEN CONCAT_WS('^', P_BANCO_CORRESP_2, P_CIUDAD_BANCO_CORRESP_2, P_DOM_BANCO_CORRESP_2)
			ELSE CONCAT_WS('^', P_BANCO_CORRESP_3, P_CIUDAD_BANCO_CORRESP_3, P_DOM_BANCO_CORRESP_3)
		END
END) AS CONCAT_BANCOS,
MAX(L_BANCO_CORRE_COD) AS L_BANCO_CORRE_COD
FROM BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP_V4
GROUP BY
CASE
	WHEN NRO_BANKTRADE_1 IS NOT NULL THEN NRO_BANKTRADE_1
	ELSE
		CASE
			WHEN NRO_BANKTRADE_2 IS NOT NULL THEN NRO_BANKTRADE_2
			ELSE NRO_BANKTRADE_3
		END
END
),
SPLIT_SWIFT_BANCO AS(
SELECT A.*
, CASE WHEN SPLIT(B.CONCAT_BANCOS, '\\\^')[0] IN ('null','NULL','') THEN cast(null as string) ELSE SPLIT(B.CONCAT_BANCOS, '\\\^')[0] END AS V_BANCO_CORRE
, CASE WHEN SPLIT(B.CONCAT_BANCOS, '\\\^')[1] IN ('null','NULL','') THEN cast(null as string) ELSE SPLIT(B.CONCAT_BANCOS, '\\\^')[1] END AS V_BANCO_CORRE_CIUDAD
, CASE WHEN SPLIT(B.CONCAT_BANCOS, '\\\^')[2] IN ('null','NULL','') THEN cast(null as string) ELSE SPLIT(B.CONCAT_BANCOS, '\\\^')[2] END AS V_BANCO_CORRE_DOM
, C.DESCRIPCION AS V_BANCO_CORRE_PAIS
, SUBSTR(A.L_BANCO_CORRE_COD, 5, 2) V_BANCO_CORRE_COD_PAIS
FROM BI_CORP_STAGING.COMEX_INTERFACES_TRF_V3 A
LEFT JOIN SWF_BANCOS_TMP B ON A.NRO_BANKTRADE = B.NRO_BANKTRADE AND A.L_BANCO_CORRE_COD = B.L_BANCO_CORRE_COD
LEFT JOIN BI_CORP_STAGING.COMEX_RIO39_PAISES C ON C.COD_BCRA = SUBSTR(A.L_BANCO_CORRE_COD, 5, 2) AND C.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
UNION ALL
SELECT * FROM BI_CORP_COMMON.COMEX_INTERFACES_TRF_TMP_V2
)
SELECT DISTINCT * FROM SPLIT_SWIFT_BANCO;


-------------------------------------------------------------------------------------------------------------
-- TABLA TEMPORAL DE INTERFACES TRANSFERENCIAS COMPLETA INFORMACION DATOS CONCEPTO, SUBPROD, NRO OPERACION --
-------------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V6;

CREATE TEMPORARY TABLE BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V6 AS
WITH BOLETO AS (
SELECT DISTINCT NRO_BOLETO
FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V5
),
REG_C AS(
SELECT DISTINCT  TRIM(A.CONCEPTOBCRA1) AS CONCEPTOBCRA1, A.NROPERACION AS NRO_BOLETO
FROM bi_corp_staging.rio4_cuotas A
JOIN BOLETO B ON A.NROPERACION = B.NRO_BOLETO
WHERE  A.fechaop = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
--UNION ALL
--SELECT TRIM(A.CONCEPTOBCRA) AS CONCEPTOBCRA1, A.NROPERACION AS NRO_BOLETO
--FROM EXT.VSAM_VW_OPERACIONES_COMEXWEB B
--JOIN BOLETO B ON A.NROPERACION = B.NRO_BOLETO
--WHERE  A.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
),
TIPO_CAMBIO_USD AS (
SELECT DISTINCT PRECIOVENTA, FECHA
FROM BI_CORP_STAGING.RIO4_CIERREBNA
WHERE MERCADO = 'LIB' AND TRIM(ESPECIE) = 'USD' AND CAST(FECHA AS DATE) BETWEEN DATE_ADD(CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE),-5) AND CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE)
),
CONCEPTO_BCRA AS (
SELECT B.CONCEPTOBCRA, A.NRO_BANKTRADE
FROM BI_CORP_STAGING.COMEX_RIO39_OPP_OPS_PAGOS B
JOIN BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V5 A ON UPPER(B.LIQ_BKT) = A.NRO_BANKTRADE
WHERE B.COD_PRODUCTO = 11
AND B.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
)
SELECT
A.*,
CASE
	WHEN B.CONCEPTOBCRA1 IN ('000156','000152','B05', '000B05') THEN 'TTA'
	ELSE
		CASE
			WHEN B.CONCEPTOBCRA1 IN ('000101', '000102', '000103', '000113', '000153', '000154', '000155', '000157', '000B01', '000B02', '000B03', 'B01', 'B02', 'B03','B06', 'B07', '000B06', '000B07') THEN 'TTI'
			ELSE 'TTS'
		END
END AS V_SUBPRODUCTO,
'104' AS VTIPO_OPER,
CASE
	WHEN LENGTH(TRIM(A.NRO_BANKTRADE)) = 10 THEN CONCAT(TRIM(A.NRO_BANKTRADE),LPAD(TRIM(A.SECUENCIA), 2, '0'))
	ELSE CONCAT(TRIM(A.NRO_BANKTRADE),LPAD(TRIM(A.SECUENCIA), 3, '0'))
 END AS V_NRO_OPERAC,
 CASE
	WHEN A.CONCEPTOBCRA IS NULL THEN CBCRA.CONCEPTOBCRA
	ELSE A.CONCEPTOBCRA
 END AS  L_CONCEPTOBCRA,
NVL(
 CASE WHEN F.FECHA IS NOT NULL THEN F.PRECIOVENTA
	   ELSE
			CASE WHEN G.FECHA IS NOT NULL THEN G.PRECIOVENTA
				 ELSE
					 CASE WHEN H.FECHA IS NOT NULL THEN H.PRECIOVENTA
						  ELSE
							  CASE WHEN I.FECHA IS NOT NULL THEN I.PRECIOVENTA
								   ELSE
									   CASE WHEN J.FECHA IS NOT NULL THEN J.PRECIOVENTA
											ELSE -1
										END
							  END
					 END
			END

 END,-1) AS V_IMP_TIPO_CAMBIO_DIA
FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V5 A
LEFT JOIN REG_C B ON A.NRO_BOLETO = B.NRO_BOLETO
LEFT JOIN CONCEPTO_BCRA CBCRA ON A.NRO_BANKTRADE = CBCRA.NRO_BANKTRADE
LEFT JOIN TIPO_CAMBIO_USD F ON CAST(F.FECHA AS DATE) = CAST(A.FECHA_OPERACION AS DATE)
LEFT JOIN TIPO_CAMBIO_USD G ON CAST(G.FECHA AS DATE) = DATE_ADD(CAST(A.FECHA_OPERACION AS DATE),-1)
LEFT JOIN TIPO_CAMBIO_USD H ON CAST(H.FECHA AS DATE) = DATE_ADD(CAST(A.FECHA_OPERACION AS DATE),-2)
LEFT JOIN TIPO_CAMBIO_USD I ON CAST(I.FECHA AS DATE) = DATE_ADD(CAST(A.FECHA_OPERACION AS DATE),-3)
LEFT JOIN TIPO_CAMBIO_USD J ON CAST(J.FECHA AS DATE) = DATE_ADD(CAST(A.FECHA_OPERACION AS DATE),-4);


------------------------------------------------------------------------------------------------
-- CREO TABLA FISICA INTERMEDIA EN STAGING - DROP DE TEMPORALES Y LIBERO MEMORIA EN LA SESION --
------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_STAGING.COMEX_INTERFACES_TRF_V6;

CREATE TABLE BI_CORP_STAGING.COMEX_INTERFACES_TRF_V6 AS
SELECT * FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V6;

DROP TABLE IF EXISTS BI_CORP_STAGING.COMEX_INTERFACES_TRF_V3;
DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V2;
DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V4;
DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V5;
DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V6;


----------------------------------
-- TABLA TEMPORAL CUENTAS COMEX --
----------------------------------

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_CUENTAS;

CREATE TEMPORARY TABLE BI_CORP_COMMON.COMEX_CUENTAS AS
SELECT
CTAS.CDCENCON, CTAS.CDSUCURS, CTAS.CDPRODUC, CTAS.CDSUBPRO,
CTAS.NUCUENTA, CTAS.NUORDENX, CTAS.CDDIVISA, CTAS.FHALTAXX,
CTAS.FHBAJAXX, CTAS.NURENOVA, CTAS.CDSTATUS, CTAS.CDTIPOJU,
CTAS.FHINICIO, CTAS.FHVENCTO, CTAS.CDSUCPRO, CTAS.CDPROMOT,
CTAS.IMLIMITE, CTAS.IMIMPOSI, CTAS.CDPEREXT, CTAS.NUARXXXX,
CTAS.CDCEMOTI, CTAS.FHCAMTIP, CTAS.IMNOINVE, CTAS.NBDOMICI,
CTAS.NBDOMIAM, CTAS.CDPOSTAL, CTAS.NBPOBLAC, CTAS.NBPOBLAA,
CTAS.NBPROVIN, CTAS.NBPAISXX, CTAS.NBORDENX, CTAS.MCRETCOR,
INFO.NUP
FROM BI_CORP_STAGING.SI02_T0AKCTAS CTAS
LEFT JOIN BI_CORP_STAGING.SI02_INFO_BANCOS INFO ON CTAS.CDCENCON = INFO.CDCENCON AND CTAS.CDSUCURS = INFO.CDSUCURS AND CTAS.NUCUENTA = INFO.NUCUENTA AND CTAS.CDDIVISA = INFO.CDDIVISA AND INFO.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}'
WHERE CTAS.PARTITION_DATE = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}';


--------------------------------------------------------------------------------------------------------------
-- TABLA TEMPORAL DE INTERFACES TRANSFERENCIAS CON TIPO DE CAMBIO ESPECIFICO DE LA OPERACION Y EL BANCO RIO --
--------------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V7;

CREATE TEMPORARY TABLE BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V7 AS
WITH IMPORTE_PESOS AS (
SELECT VO.TOTALBRUTOCLI1 AS V_IMP_OPERAC_PESOS, A.NRO_BKT, A.SECUENCIA
FROM BI_CORP_STAGING.RIO4_OPERACIONES VO
JOIN BI_CORP_STAGING.COMEX_INTERFACES_TRF_V6 A ON VO.OPERACIONREF = A.NRO_BOLETO
WHERE VO.TIPOOP = 'FXCTEC' AND CAST(VO.FECHAOP AS DATE) BETWEEN DATE_ADD(CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE),-5) AND CAST('{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS DATE)
),
NOMBRE_BANCO AS(
SELECT DISTINCT UPPER (SUBSTR (A.NBORDENX, 1, 30)) AS P_BCO_CORR_RIO_NOM, A.NUCUENTA AS NUMERO
FROM BI_CORP_COMMON.COMEX_CUENTAS A
WHERE A.NUCUENTA IN (SELECT DISTINCT NUMERO FROM BI_CORP_STAGING.COMEX_INTERFACES_TRF_V6)
)
SELECT
A.*
,CASE
	WHEN A.ACCOUNTNO_MONEDA = '002' THEN
		CASE
			WHEN A.COD_MONEDA <> '002' THEN B.V_IMP_OPERAC_PESOS / A.IMP_ALTA_OPERAC_ME
			ELSE 0
		END
	ELSE A.IMP_TIPO_CAMBIO_OPERAC
END AS V_IMP_TIPO_CAMBIO_OPERAC
,C.P_BCO_CORR_RIO_NOM
FROM BI_CORP_STAGING.COMEX_INTERFACES_TRF_V6 A
LEFT JOIN IMPORTE_PESOS B ON A.NRO_BKT = B.NRO_BKT AND A.SECUENCIA = B.SECUENCIA
LEFT JOIN NOMBRE_BANCO C ON A.NUMERO = C.NUMERO;


----------------------------------------------------------------------------------------------------
-- CREO TABLA FISICA INTERFACES_TRF EN STAGING - DROP DE TEMPORALES Y LIBERO MEMORIA EN LA SESION --
----------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS BI_CORP_STAGING.COMEX_INTERFACES_TRF;

CREATE TABLE BI_CORP_STAGING.COMEX_INTERFACES_TRF AS
SELECT DISTINCT
PROD_CTBLE AS PROD_CTBLE,
COD_MOV AS COD_MOV,
SUBCOD_MOV AS SUBCOD_MOV,
CAST(FECHA_OPERACION AS DATE) AS FECHA_OPERACION,
CAST(FECHA_PAGO AS DATE) AS FECHA_PAGO,
CAST(FECHA_CARGA AS DATE) AS FECHA_CARGA,
CAST(FECHA_VTO AS DATE) AS FECHA_VENCIMIENTO,
IMP_ALTA_OPERAC_ME AS IMP_ALTA_OPERAC_ME,
IMP_OPERAC_PESOS AS IMP_OPERAC_PESOS,
V_IMP_TIPO_CAMBIO_DIA AS IMP_TIPO_CAMBIO_DIA,
V_IMP_TIPO_CAMBIO_OPERAC AS IMP_TIPO_CAMBIO_OPERAC,
ESP_CANT AS ESP_CANT,
ESP_TIPO AS ESP_TIPO,
COD_MONEDA AS COD_MONEDA,
CTA_TIPO AS CTA_TIPO,
CTA_OPERAC AS CTA_OPERAC,
CTA_SUC AS CTA_SUC,
ACCOUNTNO AS ACCOUNTNO,
V_NRO_OPERAC AS NRO_OPERAC,
VTIPO_OPER AS TIPO_OPER,
NRO_BKT AS NRO_BKT,
NRO_CTA_BANCA_PRIVADA AS NRO_CTA_BANCA_PRIVADA,
CASE WHEN V_BANCO_CORRE IN ('null', '') THEN NULL
	 ELSE V_BANCO_CORRE
END AS BANCO_CORRE,
CASE WHEN L_BANCO_CORRE_COD IN ('null', '') THEN NULL
	 ELSE L_BANCO_CORRE_COD
END AS BANCO_CORRE_COD,
CASE WHEN V_BANCO_CORRE_COD_PAIS IN ('null', '') THEN NULL
	 ELSE V_BANCO_CORRE_COD_PAIS
END AS BANCO_CORRE_COD_PAIS,
CASE WHEN V_BANCO_CORRE_PAIS IN ('null', '') THEN NULL
	 ELSE V_BANCO_CORRE_PAIS
END AS BANCO_CORRE_PAIS,
CASE WHEN V_BANCO_CORRE_CIUDAD IN ('null', '') THEN NULL
	 ELSE V_BANCO_CORRE_CIUDAD
END AS BANCO_CORRE_CIUDAD,
CASE WHEN V_BANCO_CORRE_DOM  IN ('null', '') THEN NULL
	 ELSE V_BANCO_CORRE_DOM
END AS BANCO_CORRE_DOM,
CASE WHEN BENEFI_EXTERIOR IN ('null', '') THEN NULL
	 ELSE BENEFI_EXTERIOR
END AS BENEFI_EXTERIOR,
CASE WHEN BENEFI_COD_PAIS  IN ('null', '') THEN NULL
	 ELSE BENEFI_COD_PAIS
END AS BENEFI_COD_PAIS,
CASE WHEN BENEFI_DOM IN ('null', '') THEN NULL
	 ELSE BENEFI_DOM
END AS BENEFI_DOM,
ORIGEN AS ORIGEN,
'951' AS TIPO_MOV,
'{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS FECHA_PROC,
'{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Comex-Daily') }}' AS FECHA_PROCESO,
TRIM(TRABAJADOR1) AS TRABAJADOR1,
TRIM(TRABAJADOR2) AS TRABAJADOR2,
MARCA_ERROR AS MARCA_ERROR,
'A' AS ESTADO_REG,
'N' AS MARCA_BCA_PRIVADA,
P_BCO_CORR_RIO_NOM AS BCO_CORR_RIO,
SUBSTR(V_BANCO_CORRE,1,30) AS BCO_CORR_NOM,
SUBSTR(V_BANCO_CORRE_COD_PAIS,1,2) AS BCO_CORR_NOM_COD_PAIS,
V_SUBPRODUCTO AS SUBPRODUCTO,
NUP AS NUP,
SUBSTR(NOMBRE_CLIENTE_BANCO,1,40) AS NOMBRE_CLIENTE_BANCO,
ID_BOLETO AS ID_BOLETO,
SECTOR AS SECTOR,
CASE
	WHEN TRIM(UPPER(V_SUBPRODUCTO)) = 'OPE' THEN 'P97'
	WHEN TRIM(UPPER(V_SUBPRODUCTO)) = 'OPS' THEN 'P99'
	WHEN TRIM(UPPER(V_SUBPRODUCTO)) IN ('TTI','TTS','TTA') THEN 'T98'
	ELSE NULL
END AS COD_SUBPRODUCTO,
L_CONCEPTOBCRA AS CONCEPTOBCRA,
ACCOUNTNO_MONEDA AS CUENTA_EN
FROM BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V7;


DROP TABLE IF EXISTS BI_CORP_STAGING.COMEX_INTERFACES_TRF_V6;
DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_CUENTAS;
DROP TABLE IF EXISTS BI_CORP_COMMON.COMEX_INTERFACES_P_TMP_V7;

"
