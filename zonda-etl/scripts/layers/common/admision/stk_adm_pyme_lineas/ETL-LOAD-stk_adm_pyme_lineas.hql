set hive.merge.mapfiles=true;
set hive.merge.mapredfiles=true;
set hive.merge.size.per.task=4000000;
set hive.merge.smallfiles.avgsize=16000000;
set hive.exec.dynamic.partition.mode=nonstrict;
set mapred.job.queue.name=root.dataeng;

INSERT OVERWRITE TABLE bi_corp_common.stk_adm_pyme_lineas
    PARTITION (partition_date='{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Admision_Pyme-Daily') }}')
select distinct
    concat('F485', lpad(l.nro_prop, 16 , "0")) as cod_adm_tramite,
    cast(l.nro_prop as int) as  cod_adm_nro_prop,
    cast(l.monto_linea as double) as fc_adm_monto_linea,
    l.fec_vto_linea as dt_adm_fec_vto_linea,
    l.estado_linea as ds_adm_estado_linea,
    cast(l.porc_garantia as int) as int_adm_porc_garantia,
    l.cod_operacion as cod_adm_operacion,
    cast(l.grado_riesgo as double) as dec_adm_grado_riesgo,
    l.pecodmon as ds_adm_pecodmon,
    cast(l.spread as double) as dec_adm_spread,
    l.fec_deu_ant as dt_adm_fec_deu_ant,
    cast(l.monto_deuda as double) as fc_adm_monto_deuda,
    cast(l.monto_ant as double) as fc_adm_monto_ant,
    l.obs_garantias as ds_adm_obs_garantias,
    f.peusualt as cod_adm_peusualt_f485,
    l.pefecalt as dt_adm_pefecalt,
    f.peusumod as cod_adm_peusumod_f485,
    l.tpo_operacion as ds_adm_tpo_operacion,
    cast(l.contravalor as double) as dec_adm_contravalor,
    l.planamort as ds_adm_planamort,
    cast(l.plazo as double) as dec_adm_plazo,
    l.destino as ds_adm_destino,
    l.mediosreembolso as ds_adm_mediosreembolso,
    cast(l.tasaref as double) as dec_adm_tasaref,
    cast(l.roa as double) as dec_adm_roa,
    cast(l.rorac as double) as dec_adm_rorac,
    l.cod_gartia as cod_adm_gartia,
    l.cod_gartia2 as cod_adm_gartia2,
    cast(l.porc_garantia2 as int) as int_adm_porc_garantia2,
    cast(l.mon_garantia as double) as fc_adm_mon_garantia,
    cast(l.mon_garantia2 as double) as fc_adm_mon_garantia2,
    l.avalista as ds_adm_avalista,
    cast(l.mon_avalista as double) as fc_adm_mon_avalista,
    cast(l.secuencia as int) as int_adm_secuencia,
    l.fec_concesion as dt_adm_fec_concesion,
    l.pefecmod as dt_adm_pefecmod,
    l.unidad_plazo as ds_adm_unidad_plazo,
    cast(l.riesgo_maximo_alcanzado as double) as dec_adm_riesgo_maximo_alcanzado,
    l.obs_comite_credito as ds_adm_obs_comite_credito,
    l.modif_vo as ds_adm_modif_vo,
    cast(l.mon_cer as double) as fc_adm_mon_cer,
    cast(l.mon_reca as double) as fc_adm_mon_reca,
    l.ant_prendario as ds_adm_ant_prendario,
    cast(l.mon_librador as double) as fc_adm_mon_librador,
    cast(l.mon_librador_2 as double) as fc_adm_mon_librador_2,
    cast(l.plz_librador as int) as int_adm_plz_librador,
    cast(l.plz_librador_2 as int) as int_adm_plz_librador_2,
    cast(l.mon_firmante as double) as fc_adm_mon_firmante,
    cast(l.mon_firmante_2 as double) as fc_adm_mon_firmante_2,
    cast(l.mon_lim_utilizado as double) as fc_adm_mon_lim_utilizado,
    l.mantiene_linea as flag_adm_mantiene_linea,
    cast(l.mon_aprobado_riesgos as double) as fc_adm_mon_aprobado_riesgos,
    cast(l.valor_bien_vendor as double) as dec_adm_valor_bien_vendor,
    l.tipo_bien_vendor as ds_adm_tipo_bien_vendor,
    cast(l.plazo_vendor as double) as dec_adm_plazo_vendor,
    l.unidad_plazo_vendor as ds_adm_unidad_plazo_vendor,
    l.tpo_ptmo_flex as ds_adm_tpo_ptmo_flex,
    cast(l.plazo_ptmo_flex as double) as dec_adm_plazo_ptmo_flex,
    l.unidad_plazo_ptmo_flex as ds_adm_unidad_plazo_ptmo_flex,
    l.mar_renovable as flag_adm_mar_renovable,
    cast(l.comision as double) as dec_adm_comision,
    l.mar_consume_disponible as flag_adm_mar_consume_disponible,
    l.riesgo_operacion as ds_adm_riesgo_operacion,
    l.mar_otrorango as flag_adm_mar_otrorango,
    cast(f.lim_prop as double) as dec_adm_lim_prop,
    cast(f.imp_monto_prop as double) as fc_adm_imp_monto_prop,
    cast(f.nro_pglobal as int) as int_adm_nro_pglobal,
    l.peusualt as cod_adm_peusualt,
    f.pefecalt as dt_adm_pefecalt_f485,
    l.peusumod as cod_adm_peusumod,
    cast(f.lim_actual as double) as dec_adm_lim_actual,
    cast(f.rorac_cc as double) as dec_adm_rorac_cc,
    cast(f.rorac_sc as double) as dec_adm_rorac_sc,
    f.experiencia as ds_adm_experiencia,
    f.opiniondesfon as ds_adm_opiniondesfon,
    f.opinionreembol as ds_adm_opinionreembol,
    f.otrdatinteres as ds_adm_otrdatinteres,
    f.recomendacion as ds_adm_recomendacion,
    f.estado_f485 as cod_adm_estado_f485,
    f.fecha as dt_adm_fecha,
    cast(f.valoracion_operaciones as double) as dec_adm_valoracion_operaciones,
    f.recomendaciones_comite as ds_adm_recomendaciones_comite,
    cast(f.secuencia_pglobal as int) as int_adm_secuencia_pglobal,
    cast(f.riesgo_maximo_alcanzado_f485 as double) as dec_adm_riesgo_maximo_alcanzado_f485,
    cast(f.com_lib_rie_hist as double) as dec_adm_com_lib_rie_hist,
    cast(f.com_lib_rie_est as double) as dec_adm_com_lib_rie_est,
    cast(f.nro_acta as int) as cod_adm_nro_acta,
    f.fecha_resolucion as dt_adm_fecha_resolucion,
    cast(f.ingr_total_est as double) as fc_adm_ingr_total_est,
    cast(f.lim_actual_om as double) as dec_adm_lim_actual_om,
    cast(f.lim_prop_om as double) as dec_adm_lim_prop_om,
    f.fec_revision as dt_adm_fec_revision,
    f.mar_revision as flag_adm_mar_revision,
    cast(f.total_equivalente_actual as double) as fc_adm_total_equivalente_actual,
    cast(f.total_equivalente_prop as double) as fc_adm_total_equivalente_prop,
    cast(f.cer as double) as dec_adm_cer,
    cast(f.feve as int) as int_adm_feve,
    f.rating as ds_adm_rating,
    f.mar_empresa_vinculada as flag_adm_mar_empresa_vinculada,
    f.moneda_cer as ds_adm_moneda_cer,
    f.fec_tope_garantia as dt_adm_fec_tope_garantia,
    t.desc_operacion as ds_adm_operacion,
    t.cod_grupo as cod_adm_grupo,
    t.cod_subgrupo as cod_adm_subgrupo,
    t.cod_gartia as cod_adm_gartia_tpo,
    t.mar_oper_preaprobados as flag_adm_mar_oper_preaprobados,
    cast(t.por_ponderado as int) as int_adm_por_ponderado,
    t.mar_estandarizado as flag_adm_mar_estandarizado,
    t.mar_mm as flag_adm_mar_mm
from
    bi_corp_staging.sge_lineas_otorgadas l
left join bi_corp_staging.sge_f485 f on f.secuencia = l.secuencia and f.nro_prop = l.nro_prop and f.partition_date = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Admision_Pyme-Daily') }}'
left join bi_corp_staging.sge_v_tpo_operacion_sge t on t.cod_operacion = l.cod_operacion and t.partition_date = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Admision_Pyme-Daily') }}'
where l.partition_date = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Admision_Pyme-Daily') }}';