set hive.merge.mapfiles=true;
set hive.merge.mapredfiles=true;
set hive.merge.size.per.task=4000000;
set hive.merge.smallfiles.avgsize=16000000;
set hive.exec.dynamic.partition.mode=nonstrict;
set mapred.job.queue.name=root.dataeng;

DROP TABLE IF EXISTS participantes;
CREATE TEMPORARY TABLE participantes AS
select
    tipo_tramite,
    cod_tramite,
    participante,
    b.tipoParticipante as tipo_participante
from bi_corp_staging.scoring_omdm_participantes_propuesta_empresas
lateral view json_tuple(json,'tipoParticipante') b as tipoParticipante
where partition_date='{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Admision_OMDM_Empresas') }}' and label = 'Participante'
group by tipo_tramite, cod_tramite, participante, b.tipoParticipante;


DROP TABLE IF EXISTS balance;
CREATE TEMPORARY TABLE balance AS
select
    tipo_tramite,
    cod_tramite,
    participante,
    fec_proceso as fec_proceso,
    label,
    b.*,
    json
from bi_corp_staging.scoring_omdm_participantes_propuesta_empresas omdm
lateral view json_tuple(json,
    'activoCorriente1',
    'activoCorriente2',
    'activoNoCorrienteAnteultimoBalance',
    'activoNoCorrienteUltimoBalance',
    'activoTotal1',
    'activoTotal2',
    'amortizaciones1',
    'amortizaciones2',
    'anticipoAccionistas1',
    'anticipoAccionistas2',
    'antiguedadInformacionCuantitativa',
    'balanceAuditado',
    'balanceAuditadoAnteultimoEjercicio',
    'balanceConCertificacionLiteralConObsOSalvedades',
    'bienesDeCambio1',
    'bienesDeCambio2',
    'bienesDeUso1',
    'bienesDeUso2',
    'cantMesesBalance2',
    'cantMesesDesdeAnteultimoBalance',
    'cantMesesDesdeFechaUltimoBalanceCargado2',
    'cantMesesDesdePrimerBalance',
    'cantMesesDesdeUltimoBalance',
    'cantMesesVentasPostBalance',
    'compras1',
    'compras2',
    'costoVentas1',
    'costoVentas2',
    'creditosComerciales1',
    'creditosComerciales2',
    'cuentasParticularesAnteultimoBalanceCP',
    'cuentasParticularesAnteultimoBalanceLP',
    'cuentasParticularesUltimoBalanceCP',
    'cuentasParticularesUltimoBalanceLP',
    'deudaFiscalCP2',
    'deudasComercialesCP1',
    'deudasComercialesCP2',
    'deudasFinancierasCP1',
    'deudasFinancierasCP2',
    'deudasFinancierasLP1',
    'deudasFinancierasLP2',
    'deudasFiscalesCP1',
    'deudasFiscalesLP1',
    'deudasFiscalesLP2',
    'disponibilidades1',
    'disponibilidades2',
    'dividendosAprobadosUltimoBalance',
    'dividendosRetirados1',
    'dividendosRetirados2',
    'facturacionAnteultimoBalance',
    'facturacionUltimoBalance',
    'gastosAdministrativos1',
    'gastosAdministrativos2',
    'gastosComerciales1',
    'gastosComerciales2',
    'gastosEstructura',
    'gastosFinanciacion1',
    'gastosFinanciacion2',
    'honorariosAprobadosUltimoBalance',
    'impuestosAGanancias1',
    'impuestosAGanancias2',
    'otrosPasivosLP1',
    'otrosPasivosLP2',
    'pasivoCorriente1',
    'pasivoCorriente2',
    'pasivoNoCorrienteAnteultimoBalance',
    'pasivoNoCorrienteUltimoBalance',
    'pasivoTotal1',
    'pasivoTotal2',
    'patrimonioNeto1',
    'patrimonioNeto2',
    'poseeActivosFijos',
    'promedioMensualVentasPostBalance',
    'promedioPonderadoPlazoCobro',
    'promedioPonderadoPlazoPago',
    'resultadoExtraordinario1',
    'resultadoFinal1',
    'resultadoFinal2',
    'resultadoNetoAnteultimoBalance',
    'resultadoNetoUltimoBalance',
    'resultadoOperativo1',
    'resultadoOperativoUltimoBalance',
    'resultadosExtraordinarios2',
    'tipoInforme',
    'utilidadSujetaDDJJ',
    'ventas1',
    'ventas2'
) b as
    activoCorriente1,
    activoCorriente2,
    activoNoCorrienteAnteultimoBalance,
    activoNoCorrienteUltimoBalance,
    activoTotal1,
    activoTotal2,
    amortizaciones1,
    amortizaciones2,
    anticipoAccionistas1,
    anticipoAccionistas2,
    antiguedadInformacionCuantitativa,
    balanceAuditado,
    balanceAuditadoAnteultimoEjercicio,
    balanceConCertificacionLiteralConObsOSalvedades,
    bienesDeCambio1,
    bienesDeCambio2,
    bienesDeUso1,
    bienesDeUso2,
    cantMesesBalance2,
    cantMesesDesdeAnteultimoBalance,
    cantMesesDesdeFechaUltimoBalanceCargado2,
    cantMesesDesdePrimerBalance,
    cantMesesDesdeUltimoBalance,
    cantMesesVentasPostBalance,
    compras1,
    compras2,
    costoVentas1,
    costoVentas2,
    creditosComerciales1,
    creditosComerciales2,
    cuentasParticularesAnteultimoBalanceCP,
    cuentasParticularesAnteultimoBalanceLP,
    cuentasParticularesUltimoBalanceCP,
    cuentasParticularesUltimoBalanceLP,
    deudaFiscalCP2,
    deudasComercialesCP1,
    deudasComercialesCP2,
    deudasFinancierasCP1,
    deudasFinancierasCP2,
    deudasFinancierasLP1,
    deudasFinancierasLP2,
    deudasFiscalesCP1,
    deudasFiscalesLP1,
    deudasFiscalesLP2,
    disponibilidades1,
    disponibilidades2,
    dividendosAprobadosUltimoBalance,
    dividendosRetirados1,
    dividendosRetirados2,
    facturacionAnteultimoBalance,
    facturacionUltimoBalance,
    gastosAdministrativos1,
    gastosAdministrativos2,
    gastosComerciales1,
    gastosComerciales2,
    gastosEstructura,
    gastosFinanciacion1,
    gastosFinanciacion2,
    honorariosAprobadosUltimoBalance,
    impuestosAGanancias1,
    impuestosAGanancias2,
    otrosPasivosLP1,
    otrosPasivosLP2,
    pasivoCorriente1,
    pasivoCorriente2,
    pasivoNoCorrienteAnteultimoBalance,
    pasivoNoCorrienteUltimoBalance,
    pasivoTotal1,
    pasivoTotal2,
    patrimonioNeto1,
    patrimonioNeto2,
    poseeActivosFijos,
    promedioMensualVentasPostBalance,
    promedioPonderadoPlazoCobro,
    promedioPonderadoPlazoPago,
    resultadoExtraordinario1,
    resultadoFinal1,
    resultadoFinal2,
    resultadoNetoAnteultimoBalance,
    resultadoNetoUltimoBalance,
    resultadoOperativo1,
    resultadoOperativoUltimoBalance,
    resultadosExtraordinarios2,
    tipoInforme,
    utilidadSujetaDDJJ,
    ventas1,
    ventas2
where partition_date = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Admision_OMDM_Empresas') }}' and label like 'Balance%';


INSERT OVERWRITE TABLE bi_corp_common.stk_adm_empresas_omdm_cpp_balance
    PARTITION (partition_date='{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Admision_OMDM_Empresas') }}')
select
    omdm.tipo_tramite as cod_adm_tipotramite,
    omdm.cod_tramite as cod_adm_tramite,
    substr(omdm.fec_proceso,1,19) as ts_adm_fecproceso,
    p.tipo_participante as cod_adm_tipoparticipante,

    cast(omdm.activoCorriente1 as double) as fc_adm_activocorriente1,
    cast(omdm.activoCorriente2 as double) as fc_adm_activocorriente2,
    cast(omdm.activoNoCorrienteAnteultimoBalance as double) as fc_adm_activonocorrienteanteultimobalance,
    cast(omdm.activoNoCorrienteUltimoBalance as double) as fc_adm_activonocorrienteultimobalance,
    cast(omdm.activoTotal1 as double) as fc_adm_activototal1,
    cast(omdm.activoTotal2 as double) as fc_adm_activototal2,
    cast(omdm.amortizaciones1 as double) as fc_adm_amortizaciones1,
    cast(omdm.amortizaciones2 as double) as fc_adm_amortizaciones2,
    cast(omdm.anticipoAccionistas1 as double) as fc_adm_anticipoaccionistas1,
    cast(omdm.anticipoAccionistas2 as double) as fc_adm_anticipoaccionistas2,
    cast(omdm.antiguedadInformacionCuantitativa as int) as int_adm_antiguedadinformacioncuantitativa,
    omdm.balanceAuditado as flag_adm_balanceauditado,
    omdm.balanceAuditadoAnteultimoEjercicio as flag_adm_balanceauditadoanteultimoejercicio,
    omdm.balanceConCertificacionLiteralConObsOSalvedades as flag_adm_balanceconcertificacionliteralconobsosalvedades,
    cast(omdm.bienesDeCambio1 as double) as fc_adm_bienesdecambio1,
    cast(omdm.bienesDeCambio2 as double) as fc_adm_bienesdecambio2,
    cast(omdm.bienesDeUso1 as double) as fc_adm_bienesdeuso1,
    cast(omdm.bienesDeUso2 as double) as fc_adm_bienesdeuso2,
    cast(omdm.cantMesesBalance2 as int) as int_adm_cantmesesbalance2,
    cast(omdm.cantMesesDesdeAnteultimoBalance as int) as int_adm_cantmesesdesdeanteultimobalance,
    cast(omdm.cantMesesDesdeFechaUltimoBalanceCargado2 as int) as int_adm_cantmesesdesdefechaultimobalancecargado2,
    cast(omdm.cantMesesDesdePrimerBalance as int) as int_adm_cantmesesdesdeprimerbalance,
    cast(omdm.cantMesesDesdeUltimoBalance as int) as int_adm_cantmesesdesdeultimobalance,
    cast(omdm.cantMesesVentasPostBalance as int) as int_adm_cantmesesventaspostbalance,
    cast(omdm.compras1 as double) as fc_adm_compras1,
    cast(omdm.compras2 as double) as fc_adm_compras2,
    cast(omdm.costoVentas1 as double) as fc_adm_costoventas1,
    cast(omdm.costoVentas2 as double) as fc_adm_costoventas2,
    cast(omdm.creditosComerciales1 as double) as fc_adm_creditoscomerciales1,
    cast(omdm.creditosComerciales2 as double) as fc_adm_creditoscomerciales2,
    cast(omdm.cuentasParticularesAnteultimoBalanceCP as double) as fc_adm_cuentasparticularesanteultimobalancecp,
    cast(omdm.cuentasParticularesAnteultimoBalanceLP as double) as fc_adm_cuentasparticularesanteultimobalancelp,
    cast(omdm.cuentasParticularesUltimoBalanceCP as double) as fc_adm_cuentasparticularesultimobalancecp,
    cast(omdm.cuentasParticularesUltimoBalanceLP as double) as fc_adm_cuentasparticularesultimobalancelp,
    cast(omdm.deudaFiscalCP2 as double) as fc_adm_deudafiscalcp2,
    cast(omdm.deudasComercialesCP1 as double) as fc_adm_deudascomercialescp1,
    cast(omdm.deudasComercialesCP2 as double) as fc_adm_deudascomercialescp2,
    cast(omdm.deudasFinancierasCP1 as double) as fc_adm_deudasfinancierascp1,
    cast(omdm.deudasFinancierasCP2 as double) as fc_adm_deudasfinancierascp2,
    cast(omdm.deudasFinancierasLP1 as double) as fc_adm_deudasfinancieraslp1,
    cast(omdm.deudasFinancierasLP2 as double) as fc_adm_deudasfinancieraslp2,
    cast(omdm.deudasFiscalesCP1 as double) as fc_adm_deudasfiscalescp1,
    cast(omdm.deudasFiscalesLP1 as double) as fc_adm_deudasfiscaleslp1,
    cast(omdm.deudasFiscalesLP2 as double) as fc_adm_deudasfiscaleslp2,
    cast(omdm.disponibilidades1 as double) as fc_adm_disponibilidades1,
    cast(omdm.disponibilidades2 as double) as fc_adm_disponibilidades2,
    cast(omdm.dividendosAprobadosUltimoBalance as double) as fc_adm_dividendosaprobadosultimobalance,
    cast(omdm.dividendosRetirados1 as double) as fc_adm_dividendosretirados1,
    cast(omdm.dividendosRetirados2 as double) as fc_adm_dividendosretirados2,
    cast(omdm.facturacionAnteultimoBalance as double) as fc_adm_facturacionanteultimobalance,
    cast(omdm.facturacionUltimoBalance as double) as fc_adm_facturacionultimobalance,
    cast(omdm.gastosAdministrativos1 as double) as fc_adm_gastosadministrativos1,
    cast(omdm.gastosAdministrativos2 as double) as fc_adm_gastosadministrativos2,
    cast(omdm.gastosComerciales1 as double) as fc_adm_gastoscomerciales1,
    cast(omdm.gastosComerciales2 as double) as fc_adm_gastoscomerciales2,
    cast(omdm.gastosEstructura as double) as fc_adm_gastosestructura,
    cast(omdm.gastosFinanciacion1 as double) as fc_adm_gastosfinanciacion1,
    cast(omdm.gastosFinanciacion2 as double) as fc_adm_gastosfinanciacion2,
    cast(omdm.honorariosAprobadosUltimoBalance as double) as fc_adm_honorariosaprobadosultimobalance,
    cast(omdm.impuestosAGanancias1 as double) as fc_adm_impuestosaganancias1,
    cast(omdm.impuestosAGanancias2 as double) as fc_adm_impuestosaganancias2,
    cast(omdm.otrosPasivosLP1 as double) as fc_adm_otrospasivoslp1,
    cast(omdm.otrosPasivosLP2 as double) as fc_adm_otrospasivoslp2,
    cast(omdm.pasivoCorriente1 as double) as fc_adm_pasivocorriente1,
    cast(omdm.pasivoCorriente2 as double) as fc_adm_pasivocorriente2,
    cast(omdm.pasivoNoCorrienteAnteultimoBalance as double) as fc_adm_pasivonocorrienteanteultimobalance,
    cast(omdm.pasivoNoCorrienteUltimoBalance as double) as fc_adm_pasivonocorrienteultimobalance,
    cast(omdm.pasivoTotal1 as double) as fc_adm_pasivototal1,
    cast(omdm.pasivoTotal2 as double) as fc_adm_pasivototal2,
    cast(omdm.patrimonioNeto1 as double) as fc_adm_patrimonioneto1,
    cast(omdm.patrimonioNeto2 as double) as fc_adm_patrimonioneto2,
    omdm.poseeActivosFijos as flag_adm_poseeactivosfijos,
    cast(omdm.promedioMensualVentasPostBalance as double) as fc_adm_promediomensualventaspostbalance,
    cast(omdm.promedioPonderadoPlazoCobro as double) as fc_adm_promedioponderadoplazocobro,
    cast(omdm.promedioPonderadoPlazoPago as double) as fc_adm_promedioponderadoplazopago,
    cast(omdm.resultadoExtraordinario1 as double) as fc_adm_resultadoextraordinario1,
    cast(omdm.resultadoFinal1 as double) as fc_adm_resultadofinal1,
    cast(omdm.resultadoFinal2 as double) as fc_adm_resultadofinal2,
    cast(omdm.resultadoNetoAnteultimoBalance as double) as fc_adm_resultadonetoanteultimobalance,
    cast(omdm.resultadoNetoUltimoBalance as double) as fc_adm_resultadonetoultimobalance,
    cast(omdm.resultadoOperativo1 as double) as fc_adm_resultadooperativo1,
    cast(omdm.resultadoOperativoUltimoBalance as double) as fc_adm_resultadooperativoultimobalance,
    cast(omdm.resultadosExtraordinarios2 as double) as fc_adm_resultadosextraordinarios2,
    omdm.tipoInforme as cod_adm_tipoinforme,
    cast(omdm.utilidadSujetaDDJJ as double) as fc_adm_utilidadsujetaddjj,
    cast(omdm.ventas1 as double) as fc_adm_ventas1,
    cast(omdm.ventas2 as double) as fc_adm_ventas2,
    omdm.json as ds_adm_json
from balance omdm
left join participantes p on p.tipo_tramite = omdm.tipo_tramite and p.cod_tramite = omdm.cod_tramite and p.participante = omdm.participante;