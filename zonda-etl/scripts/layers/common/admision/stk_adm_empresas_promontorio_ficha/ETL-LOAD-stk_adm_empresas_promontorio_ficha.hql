set hive.merge.mapfiles=true;
set hive.merge.mapredfiles=true;
set hive.merge.size.per.task=4000000;
set hive.merge.smallfiles.avgsize=16000000;
set hive.exec.dynamic.partition.mode=nonstrict;
SET mapred.job.queue.name=root.dataeng;

INSERT OVERWRITE TABLE bi_corp_common.stk_adm_empresas_promontorio_ficha
    PARTITION (partition_date='{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Admision_Empresas-Daily') }}')
SELECT
cast(idfichapromontorio as bigint) id_adm_fichapromontorio,
cast(idpromontorioestadoempresa as bigint) id_adm_promontorioestadoempresa,
cast(idpromontorioestado as bigint) id_adm_promontorioestado,
cast(nup as bigint) cod_per_nup,
cast(valorrating as decimal(16,2)) fc_adm_valorrating,
descripcion_tiporating ds_adm_tiporating,
razonsocial ds_adm_razonsocial,
feve ds_adm_feve,
cast(razonsociallimite as decimal(16,2)) dec_adm_razonsociallimite,
cast(razonsocialdispuesto as decimal(16,2)) dec_adm_razonsocialdispuesto,
cast(razonsocialgarreal as decimal(16,2)) dec_adm_razonsocialgarreal,
cast(totallimite as decimal(16,2)) fc_adm_totallimite,
cast(totaldispuesto as decimal(16,2)) fc_adm_totaldispuesto,
cast(totalgarreal as decimal(16,2)) fc_adm_totalgarreal,
cast(financierocplimite as decimal(16,2)) dec_adm_financierocplimite,
cast(financierocpdispuesto as decimal(16,2)) dec_adm_financierocpdispuesto,
cast(financierocpgarreal as decimal(16,2)) dec_adm_financierocpgarreal,
cast(financierolplimite as decimal(16,2)) dec_adm_financierolplimite,
cast(financierolpdispuesto as decimal(16,2)) dec_adm_financierolpdispuesto,
cast(financierolpgarreal as decimal(16,2)) dec_adm_financierolpgarreal,
cast(avalestecnicoslimite as decimal(16,2)) dec_adm_avalestecnicoslimite,
cast(avalestecnicosdispuesto as decimal(16,2)) dec_adm_avalestecnicosdispuesto,
cast(avalestecnicosgarreal as decimal(16,2)) dec_adm_avalestecnicosgarreal,
cast(otroslimite as decimal(16,2)) dec_adm_otroslimite,
cast(otrosdispuesto as decimal(16,2)) dec_adm_otrosdispuesto,
cast(otrosgarreal as decimal(16,2)) dec_adm_otrosgarreal,
cast(total2limite as decimal(16,2)) fc_adm_total2limite,
cast(total2dispuesto as decimal(16,2)) fc_adm_total2dispuesto,
cast(total2garreal as decimal(16,2)) fc_adm_total2garreal,
cast(ventas as decimal(16,2)) fc_adm_ventas,
cast(ebitda as decimal(16,2)) dec_adm_ebitda,
cast(ebit as decimal(16,2)) dec_adm_ebit,
cast(bai as decimal(16,2)) dec_adm_bai,
cast(cashflowlibre as decimal(16,2)) dec_adm_cashflowlibre,
cast(fondospropios as decimal(16,2)) dec_adm_fondospropios,
cast(deudafinancieraneta as decimal(16,2)) dec_adm_deudafinancieraneta,
cast(deudafinancieralp as decimal(16,2)) dec_adm_deudafinancieralp,
cast(capitalcirculanteoperativo as decimal(16,2)) dec_adm_capitalcirculanteoperativo,
cast(totalbalance as decimal(16,2)) fc_adm_totalbalance,
cast(margenordinariovalor as decimal(16,2)) dec_adm_margenordinariovalor,
cast(margenordinarioroa as decimal(16,2)) dec_adm_margenordinarioroa,
cast(cuotasanlimites as decimal(16,2)) dec_adm_cuotasanlimites,
cast(cuotasandispuestos as decimal(16,2)) dec_adm_cuotasandispuestos,
bcrafecha ts_adm_bcrafecha,
cast(bcravalor as decimal(16,2)) dec_adm_bcravalor,
fechaentradafeve ts_adm_fechaentradafeve,
fechaprevia ts_adm_fechaprevia,
cast(antiguedad as bigint) int_adm_antiguedad,
cast(calificacionactual as bigint) int_adm_calificacionactual,
fechaultimacalificacion ts_adm_fechaultimacalificacion,
calificacionfeve ds_adm_calificacionfeve,
situacionactual ds_adm_situacionactual,
focodepreocupacion ds_adm_focodepreocupacion,
proximospasos ds_adm_proximospasos,
recomendacioncomite ds_adm_recomendacioncomite,
zona ds_adm_zona,
cast(sucursal as bigint) cod_adm_sucursal,
cast(grupoeconomico as bigint) cod_adm_grupoeconomico,
fechainicio ts_adm_fechainicio,
fechafinalizacion ts_adm_fechafinalizacion,
fechavtocalifactual ts_adm_fechavtocalifactual,
fecultimobalance ts_adm_fecultimobalance
FROM bi_corp_staging.sge_promontorio_ficha
WHERE partition_date = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Admision_Empresas-Daily') }}';