set hive.merge.mapfiles=true;
set hive.merge.mapredfiles=true;
set hive.merge.size.per.task=4000000;
set hive.merge.smallfiles.avgsize=16000000;
set hive.exec.dynamic.partition.mode=nonstrict;
set mapred.job.queue.name=root.dataeng;

DROP TABLE IF EXISTS participantes;
CREATE TEMPORARY TABLE participantes AS
select
    tipo_tramite,
    cod_tramite,
    participante,
    b.tipoParticipante as tipo_participante
from bi_corp_staging.scoring_omdm_participantes_propuesta_empresas
lateral view json_tuple(json,'tipoParticipante') b as tipoParticipante
where partition_date='{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Admision_OMDM_Empresas') }}' and label = 'Participante'
group by tipo_tramite, cod_tramite, participante, b.tipoParticipante;


DROP TABLE IF EXISTS participantepropuesta;
CREATE TEMPORARY TABLE participantepropuesta AS
select
    tipo_tramite,
    cod_tramite,
    participante,
    fec_proceso as fec_proceso,
    b.*,
    json
from bi_corp_staging.scoring_omdm_participantes_propuesta_empresas omdm
lateral view json_tuple(json,
    'actividadBCRA',
    'actividadNoSujetaACredito',
    'aIGEPS',
    'cantChequesRechazadosNoRescatadosUlt12MesesPS',
    'cantChequesRechazadosRescatadosUlt12MesesPS',
    'cantDiasAtrasoLeasingPS',
    'cantDiasAtrasoPrestamosPS',
    'cantDiasAtrasoTarjetaPS',
    'cantDiasDesdeVencCampaniaPerteneciaCliente',
    'cantRecondCarradasIndFechaCierrePS',
    'cantRecondCerradas2UltimosAnosPS',
    'cantRefiAcuerdoCerrados2UltimosAnosPS',
    'cantRefiAcuerdosPagoCerradosIndFechaCierrePS',
    'cantSocios',
    'cantVecesEntroCiclo1PS',
    'cantVecesEntroCiclo2PS',
    'cantVecesEntroCiclo3PS',
    'cantVecesEntroCiclo4PS',
    'clienteEnGestionYMoraPS',
    'cogidoFormaJuridica',
    'esBalanceODDJJ',
    'estadoCivil',
    'fEVEPS',
    'marcaFraudeDNIPS',
    'marcaFraudeNombreApellidoPS',
    'marcaIN00PS',
    'marcaSCAN',
    'montoImpagoLeasingPS',
    'montoImpagoPrestamosPS',
    'montoTablaDeCampaniaComunidad',
    'nacionalidadCliente',
    'nosisEmpresa',
    'nosisMontoSantander',
    'nosisMontoSF',
    'nosisRechazoCheques12M',
    'nosisRechazoCheques6M',
    'nosisRechazoChequesMulta',
    'nosisRechazoConcursosQuiebra',
    'nosisRechazoEndeudamiento',
    'nosisRechazoJuicios',
    'nosisRechazoOficios',
    'nosisRechazoPedidosQuiebra',
    'nosisRechazoScore',
    'nosisRechazoSituacion',
    'nosisRechazoSituacion12M',
    'nosisRechazoSituacion6M',
    'nosisSocio1',
    'nosisSocio2',
    'nosisSocio3',
    'nosisSocio4',
    'nosisSocio5',
    'nosisSocio6',
    'nosisSocio7',
    'nosisSocio8',
    'nrosocioPP',
    'pctParticipacionPP',
    'perteneceAGrupoEconomico',
    'poseeRecondRefiAcuerdoDePagoVigentePS',
    'rubroEconomico',
    'saldoImpagoTarjetaCreditoPS',
    'scoreOriginacion',
    'tipoParticipante',
    'tipoPersona',
    'documentoPP'
) b as
    actividadBCRA,
    actividadNoSujetaACredito,
    aIGEPS,
    cantChequesRechazadosNoRescatadosUlt12MesesPS,
    cantChequesRechazadosRescatadosUlt12MesesPS,
    cantDiasAtrasoLeasingPS,
    cantDiasAtrasoPrestamosPS,
    cantDiasAtrasoTarjetaPS,
    cantDiasDesdeVencCampaniaPerteneciaCliente,
    cantRecondCarradasIndFechaCierrePS,
    cantRecondCerradas2UltimosAnosPS,
    cantRefiAcuerdoCerrados2UltimosAnosPS,
    cantRefiAcuerdosPagoCerradosIndFechaCierrePS,
    cantSocios,
    cantVecesEntroCiclo1PS,
    cantVecesEntroCiclo2PS,
    cantVecesEntroCiclo3PS,
    cantVecesEntroCiclo4PS,
    clienteEnGestionYMoraPS,
    cogidoFormaJuridica,
    esBalanceODDJJ,
    estadoCivil,
    fEVEPS,
    marcaFraudeDNIPS,
    marcaFraudeNombreApellidoPS,
    marcaIN00PS,
    marcaSCAN,
    montoImpagoLeasingPS,
    montoImpagoPrestamosPS,
    montoTablaDeCampaniaComunidad,
    nacionalidadCliente,
    nosisEmpresa,
    nosisMontoSantander,
    nosisMontoSF,
    nosisRechazoCheques12M,
    nosisRechazoCheques6M,
    nosisRechazoChequesMulta,
    nosisRechazoConcursosQuiebra,
    nosisRechazoEndeudamiento,
    nosisRechazoJuicios,
    nosisRechazoOficios,
    nosisRechazoPedidosQuiebra,
    nosisRechazoScore,
    nosisRechazoSituacion,
    nosisRechazoSituacion12M,
    nosisRechazoSituacion6M,
    nosisSocio1,
    nosisSocio2,
    nosisSocio3,
    nosisSocio4,
    nosisSocio5,
    nosisSocio6,
    nosisSocio7,
    nosisSocio8,
    nrosocioPP,
    pctParticipacionPP,
    perteneceAGrupoEconomico,
    poseeRecondRefiAcuerdoDePagoVigentePS,
    rubroEconomico,
    saldoImpagoTarjetaCreditoPS,
    scoreOriginacion,
    tipoParticipante,
    tipoPersona,
    documentoPP
where partition_date = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Admision_OMDM_Empresas') }}' and label = 'Participante';


INSERT OVERWRITE TABLE bi_corp_common.stk_adm_empresas_omdm_cpp_participante
    PARTITION (partition_date='{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Admision_OMDM_Empresas') }}')
select
    b.tipo_tramite as cod_adm_tipotramite,
    b.cod_tramite as cod_adm_tramite,
    substr(b.fec_proceso,1,19) as ts_adm_fecproceso,
    b.actividadBCRA as cod_adm_actividadbcra,
    b.actividadNoSujetaACredito as flag_adm_actividadnosujetaacredito,
    b.aIGEPS as cod_adm_aigeps,
    cast(b.cantChequesRechazadosNoRescatadosUlt12MesesPS as int) as int_adm_cantchequesrechazadosnorescatadosult12mesesps,
    cast(b.cantChequesRechazadosRescatadosUlt12MesesPS as int) as int_adm_cantchequesrechazadosrescatadosult12mesesps,
    cast(b.cantDiasAtrasoLeasingPS as int) as int_adm_cantdiasatrasoleasingps,
    cast(b.cantDiasAtrasoPrestamosPS as int) as int_adm_cantdiasatrasoprestamosps,
    cast(b.cantDiasAtrasoTarjetaPS as int) as int_adm_cantdiasatrasotarjetaps,
    cast(b.cantDiasDesdeVencCampaniaPerteneciaCliente as int) as int_adm_cantdiasdesdevenccampaniaperteneciacliente,
    cast(b.cantRecondCarradasIndFechaCierrePS as int) as int_adm_cantrecondcarradasindfechacierreps,
    cast(b.cantRecondCerradas2UltimosAnosPS as int) as int_adm_cantrecondcerradas2ultimosanosps,
    cast(b.cantRefiAcuerdoCerrados2UltimosAnosPS as int) as int_adm_cantrefiacuerdocerrados2ultimosanosps,
    cast(b.cantRefiAcuerdosPagoCerradosIndFechaCierrePS as int) as int_adm_cantrefiacuerdospagocerradosindfechacierreps,
    cast(b.cantSocios as int) as int_adm_cantsocios,
    cast(b.cantVecesEntroCiclo1PS as int) as int_adm_cantvecesentrociclo1ps,
    cast(b.cantVecesEntroCiclo2PS as int) as int_adm_cantvecesentrociclo2ps,
    cast(b.cantVecesEntroCiclo3PS as int) as int_adm_cantvecesentrociclo3ps,
    cast(b.cantVecesEntroCiclo4PS as int) as int_adm_cantvecesentrociclo4ps,
    b.clienteEnGestionYMoraPS as flag_adm_clienteengestionymoraps,
    b.cogidoFormaJuridica as cod_adm_cogidoformajuridica,
    b.esBalanceODDJJ as flag_adm_esbalanceoddjj,
    b.estadoCivil as cod_adm_estadocivil,
    b.fEVEPS as cod_adm_feveps,
    b.marcaFraudeDNIPS as flag_adm_marcafraudednips,
    b.marcaFraudeNombreApellidoPS as flag_adm_marcafraudenombreapellidops,
    b.marcaIN00PS as cod_adm_marcain00ps,
    b.marcaSCAN as cod_adm_marcascan,
    cast(b.montoImpagoLeasingPS as double) as fc_adm_montoimpagoleasingps,
    cast(b.montoImpagoPrestamosPS as double) as fc_adm_montoimpagoprestamosps,
    cast(b.montoTablaDeCampaniaComunidad as double) as fc_adm_montotabladecampaniacomunidad,
    b.nacionalidadCliente as ds_adm_nacionalidadcliente,
    b.nosisEmpresa as ds_adm_nosisempresa,
    cast(b.nosisMontoSantander as double) as fc_adm_nosismontosantander,
    cast(b.nosisMontoSF as double) as fc_adm_nosismontosf,
    b.nosisRechazoCheques12M as ds_adm_nosisrechazocheques12m,
    b.nosisRechazoCheques6M as ds_adm_nosisrechazocheques6m,
    b.nosisRechazoChequesMulta as ds_adm_nosisrechazochequesmulta,
    b.nosisRechazoConcursosQuiebra as ds_adm_nosisrechazoconcursosquiebra,
    b.nosisRechazoEndeudamiento as ds_adm_nosisrechazoendeudamiento,
    b.nosisRechazoJuicios as ds_adm_nosisrechazojuicios,
    b.nosisRechazoOficios as ds_adm_nosisrechazooficios,
    b.nosisRechazoPedidosQuiebra as ds_adm_nosisrechazopedidosquiebra,
    b.nosisRechazoScore as ds_adm_nosisrechazoscore,
    b.nosisRechazoSituacion as ds_adm_nosisrechazosituacion,
    b.nosisRechazoSituacion12M as ds_adm_nosisrechazosituacion12m,
    b.nosisRechazoSituacion6M as ds_adm_nosisrechazosituacion6m,
    b.nosisSocio1 as ds_adm_nosissocio1,
    b.nosisSocio2 as ds_adm_nosissocio2,
    b.nosisSocio3 as ds_adm_nosissocio3,
    b.nosisSocio4 as ds_adm_nosissocio4,
    b.nosisSocio5 as ds_adm_nosissocio5,
    b.nosisSocio6 as ds_adm_nosissocio6,
    b.nosisSocio7 as ds_adm_nosissocio7,
    b.nosisSocio8 as ds_adm_nosissocio8,
    cast(b.nrosocioPP as int) as cod_adm_nrosociopp,
    cast(b.pctParticipacionPP as double) as fc_adm_pctparticipacionpp,
    b.perteneceAGrupoEconomico as flag_adm_perteneceagrupoeconomico,
    b.poseeRecondRefiAcuerdoDePagoVigentePS as flag_adm_poseerecondrefiacuerdodepagovigenteps,
    b.rubroEconomico as cod_adm_rubroeconomico,
    cast(b.saldoImpagoTarjetaCreditoPS as double) as fc_adm_saldoimpagotarjetacreditops,
    cast(b.scoreOriginacion as int) as int_adm_scoreoriginacion,
    b.tipoParticipante as cod_adm_tipoparticipante,
    b.tipoPersona as cod_adm_tipopersona,
    cast(b.documentoPP as bigint) as cod_adm_documento,
    b.json as ds_adm_json
from participantepropuesta b
left join participantes p on p.tipo_tramite = b.tipo_tramite and p.cod_tramite = b.cod_tramite and p.participante = b.participante;