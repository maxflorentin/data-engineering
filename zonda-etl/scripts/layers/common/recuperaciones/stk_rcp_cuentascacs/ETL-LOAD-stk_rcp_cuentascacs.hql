set hive.merge.mapfiles=true;
set hive.merge.mapredfiles=true;
set hive.merge.size.per.task=4000000;
set hive.merge.smallfiles.avgsize=16000000;
set hive.exec.dynamic.partition.mode=nonstrict;
set mapred.job.queue.name=root.dataeng;

insert overwrite table bi_corp_common.stk_rcp_cuentascacs
partition(partition_date='{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_RECUPERACIONES_CacsEmerix-Daily') }}')

SELECT
trim(location_code) as ds_rcp_codigolocacion,
trim(acct_num) as ds_rcp_acctnum,
CASE WHEN substr(trim(ACCT_NUM),1,2)= 'CL' THEN cast(SUBSTR(trim(ACCT_NUM),4,14) as bigint) ELSE cast(SUBSTR(trim(ACCT_NUM),-12,12) as bigint) END as cod_nro_cuenta,
cast(trim(credit_limit_amt) as decimal(17,2)) as fc_rcp_limitecredito,
case when trim(expiration_date) in ('000000', 'null', null) then null else concat('20', substring(trim(expiration_date),1,2),'-',substring(trim(expiration_date),3,2),'-', substring(trim(expiration_date),5,2)) end as dt_rcp_fechaexpiracion,
cast(trim(balance_amt) as decimal(17,2)) as fc_rcp_importedeuda,
cast(trim(overlimit_amt) as decimal(17,2)) as fc_rcp_overlimitamt,
cast(trim(total_due_amt) as decimal(17,2)) as fc_rcp_importecapitalpendiente,
case when trim(coll_asgn_ud_1) = '' then NULL else trim(coll_asgn_ud_1) end as ds_rcp_sucursalconletra,
cast(trim(total_delinq_amt) as decimal(17,2)) as fc_rcp_importecuotasimpagas,
cast(trim(cycles_delinq_cnt) as int) as fc_rcp_canciclosimpagos,
cast(trim(last_payment_amt) as decimal(17,2)) as fc_rcp_montoultimopago,
case when trim(charge_off_date) in ('000000', 'null', null) then null else concat('20', substring(trim(charge_off_date),1,2),'-',substring(trim(charge_off_date),3,2),'-', substring(trim(charge_off_date),5,2)) end as dt_rcp_fechachargeoff,
case when trim(acct_open_date) in ('000000', 'null', null) then null else concat('20', substring(trim(acct_open_date),1,2),'-',substring(trim(acct_open_date),3,2),'-', substring(trim(acct_open_date),5,2)) end as dt_rcp_fechaaltacuenta,
case when trim(next_due_date) in ('000000', 'null', null) then null else concat('20', substring(trim(next_due_date),1,2),'-',substring(trim(next_due_date),3,2),'-', substring(trim(next_due_date),5,2)) end as dt_rcp_fechaproximacuota,
cast(trim(oth_delq_amt) as decimal(17,2)) as fc_rcp_otrosmontosadeuda,
case when trim(repossession_date) in ('000000', 'null', null) then null else concat('20', substring(trim(repossession_date),1,2),'-',substring(trim(repossession_date),3,2),'-', substring(trim(repossession_date),5,2)) end as dt_rcp_fechareposicion,
cast(trim(payment_amt) as decimal(17,2)) as fc_rcp_montopago,
cast(trim(principal_delq_amt) as decimal(17,2)) as fc_rcp_importedeudaactual,
cast(cycle_id as int) as fc_rcp_cycleid,
case when trim(last_billing_date) in ('000000', 'null', null) then null else concat('20', substring(trim(last_billing_date),1,2),'-',substring(trim(last_billing_date),3,2),'-', substring(trim(last_billing_date),5,2)) end as dt_rcp_fechaultimafacturacion,
case when trim(number_of_cards) = '' then NULL else trim(number_of_cards) end as ds_rcp_numericodetarjetas,
case when trim(warn_bulletin_date) in ('000000', 'null', null) then null else concat('20', substring(trim(warn_bulletin_date),1,2),'-',substring(trim(warn_bulletin_date),3,2),'-', substring(trim(warn_bulletin_date),5,2)) end as dt_rcp_fechasituacionirregular,
case when trim(warn_bulletin_zone) = '' then NULL else trim(warn_bulletin_zone) end as ds_rcp_warnbulletinzone,
case when trim(other_acct_num) = '' then NULL else trim(other_acct_num) end as ds_rcp_nrocuentaasociadaconletra,
case when trim(last_payment_date) in ('000000', 'null', null) then null else concat('20', substring(trim(last_payment_date),1,2),'-',substring(trim(last_payment_date),3,2),'-', substring(trim(last_payment_date),5,2)) end as dt_rcp_fechaultimopago,
case when trim(last_monetary_type) = '' then NULL else trim(last_monetary_type) end as ds_rcp_tipoultimadivisa,
case when trim(flag_infinity) = '' then NULL else trim(flag_infinity) end as ds_rcp_marcainfinity,
cast(trim(principal_amt) as decimal(17,2)) as fc_rcp_montoprincipal,
cast(trim(other_amt) as decimal(17,2)) as fc_rcp_otromonto,
cast(trim(orig_balance_amt) as decimal(17,2)) as fc_rcp_balanceoriginal,
cast(trim(officer_num) as decimal(17,2)) as fc_rcp_officersum,
cast(trim(branch_num) as int) as cod_suc_sucursal,
case when trim(original_term) = '' then NULL else trim(original_term) end as ds_rcp_plazooriginal,
case when trim(account_type) = '' then NULL else trim(account_type) end as ds_rcp_tipocuenta,
case when trim(service_type) = '' then NULL else trim(service_type) end as ds_rcp_tiposervicio,
trim(customer_info_num) as cod_rcp_nupinformacion,
case when state_flag = '' then NULL else trim(state_flag) end as ds_rcp_marcaestado,
case when trim(last_activity_date) in ('000000', 'null', null) then null else concat('20', substring(trim(last_activity_date),1,2),'-',substring(trim(last_activity_date),3,2),'-', substring(trim(last_activity_date),5,2)) end as dt_rcp_fechaultimaactividad,
case when trim(collctn_entry_date) in ('000000', 'null', null) then null else concat('20', substring(trim(collctn_entry_date),1,2),'-',substring(trim(collctn_entry_date),3,2),'-', substring(trim(collctn_entry_date),5,2)) end as dt_rcp_fechaentradacollection,
case when trim(boc_resp_coll) = '' then NULL else trim(boc_resp_coll) end as ds_rcp_bocrespcoll,
cast(trim(boc_delinquent_amt) as decimal(17,2)) as fc_rcp_bocdelinquentamt,
case when trim(return_to_ste_code) = '' then NULL else trim(return_to_ste_code) end as ds_rcp_estado,
case when trim(last_collector_id) = '' then NULL else trim(last_collector_id) end as ds_rcp_lastcollectorid,
case when trim(resp_coll_id) = '' then NULL else trim(resp_coll_id) end as ds_rcp_respcollid,
case when trim(cacs_state_code) = '' then NULL else trim(cacs_state_code) end as ds_rcp_codigoestadocacs,
case when trim(state_entry_date) in ('000000', 'null', null) then null else concat('20', substring(trim(state_entry_date),1,2),'-',substring(trim(state_entry_date),3,2),'-', substring(trim(state_entry_date),5,2)) end as dt_rcp_fechaestadocacs,
cast(trim(charge_off_amt) as decimal(17,2)) as fc_rcp_montochargeoff,
cast(num_nup as bigint) as cod_per_nup,
case when trim(time_zone) = '' then NULL else trim(time_zone) end as ds_rcp_timezone,
case when trim(coll_asgn_ud_2) = '' then NULL else trim(coll_asgn_ud_2) end as ds_rcp_collasgnud2,
case when trim(value_code) = '' then NULL else trim(value_code) end as ds_rcp_valuecode,
case when trim(customer_name) = '' then NULL else trim(customer_name) end as ds_rcp_nombrecliente,
case when trim(recommended_act_cd) = '' then NULL else trim(recommended_act_cd) end as ds_rcp_recommendedactcd,
case when trim(risk_code) = '' then NULL else trim(risk_code) end as ds_rcp_codigoriesgo,
case when trim(social_sec_num) = '' then NULL else trim(social_sec_num) end as ds_rcp_dnicuit,
case when trim(place_called) = '' then NULL else trim(place_called) end as ds_rcp_placecalled,
case when trim(party_cntct_code) = '' then NULL else trim(party_cntct_code) end as ds_rcp_partycntctcode,
case when trim(coll_activity_code) = '' then NULL else trim(coll_activity_code) end as ds_rcp_codificacion,
case when trim(nonpay_excuse_code) = '' then NULL else trim(nonpay_excuse_code) end as ds_rcp_nonpayexcusecode,
case when trim(hold_date) in ('000000', 'null', null) then null else concat('20', substring(trim(hold_date),1,2),'-',substring(trim(hold_date),3,2),'-', substring(trim(hold_date),5,2)) end as dt_rcp_fechahold,
case when trim(zona) = '' then NULL else trim(zona) end as ds_rcp_zona,
case when trim(marca_bnp) = '' then NULL else trim(marca_bnp) end as ds_rcp_marcabnp,
case when trim(letra_score) = '' then NULL else trim(letra_score) end as ds_rcp_letrascore,
case when trim(numero_score) = '' then NULL else trim(numero_score) end as ds_rcp_numeroscore,
case when trim(bloqueo) = '' then NULL else trim(bloqueo) end as ds_rcp_bloqueo,
case when trim(escenario) = '' then NULL else trim(escenario) end as ds_rcp_escenario,
case when trim(desc_escenario) = '' then NULL else trim(desc_escenario) end as ds_rcp_descescenario,
case when trim(fixed_action_1) = '' then NULL else trim(fixed_action_1) end as ds_rcp_fixedaction1,
case when trim(fixed_action_2) = '' then NULL else trim(fixed_action_2) end as ds_rcp_fixedaction2,
case when trim(timed_action_1) = '' then NULL else trim(timed_action_1) end as ds_rcp_timedaction1,
case when trim(timed_action_2) = '' then NULL else trim(timed_action_2) end as ds_rcp_timedaction2,
case when trim(timed_action_3) = '' then NULL else trim(timed_action_3) end as ds_rcp_timedaction3,
case when trim(timed_action_4) = '' then NULL else trim(timed_action_4) end as ds_rcp_timedaction4,
case when trim(timed_action_5) = '' then NULL else trim(timed_action_5) end as ds_rcp_timedaction5,
case when trim(mora_404) = '' then NULL else trim(mora_404) end as ds_rcp_mora404,
case when trim(veraz_behavior) = '' then NULL else trim(veraz_behavior) end as ds_rcp_verazbehavior,
case when trim(dato_renta) = '' then NULL else trim(dato_renta) end as ds_rcp_datorenta,
case when trim(fec_bloqueo) in ('000000', 'null', null, '') then null else concat('20', substring(trim(fec_bloqueo),1,2),'-',substring(trim(fec_bloqueo),3,2),'-', substring(trim(fec_bloqueo),5,2)) end as dt_rcp_fechabloqueo,
cast(score_alineado as decimal(17,2)) as fc_rcp_scorealineado,
cast(balance_risk_total as decimal(17,2)) as fc_rcp_balancerisktotal,
cast(balance_risk_unsecured as decimal(17,2)) as fc_rcp_balanceriskunsecured,
cast(balance_risk_secured as decimal(17,2)) as fc_rcp_balancerisksecured,
cast(scorecard as decimal(17,2)) as fc_rcp_scorecard
FROM bi_corp_staging.cacs_mf_cuentas
WHERE partition_date = '{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_RECUPERACIONES_CacsEmerix-Daily') }}'
and trim(state_flag) = 'A'
;