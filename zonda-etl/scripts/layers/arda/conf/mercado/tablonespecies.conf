tablonEspecies {

  queries: {
    //OJO con el cod_entidad != 'COD_ENTIDAD' es para quitar la cabecera
    tablePosicionesBonos: """
      select fec_posicion as fec_info, '${P_s_Sis_origen_MESAMF}' as cod_sis_origen, cod_especie_sam as cod_especie, cod_cartera, cod_tip_posicion as cod_disponibilidad,
      cod_entidad, sum(num_posicion_inicial) as num_posicion_inicial, sum(num_posicion_final) as num_posicion_final, data_date_part as data_date
      from ${database}.${P_s_Origen_Especies}
      where data_date_part = '${loadDate}'
      and cod_entidad != 'COD_ENTIDAD'
      group by fec_posicion, cod_sis_origen, cod_especie_sam, cod_cartera, cod_tip_posicion, cod_entidad, data_date_part
    """
    //OJO con el cod_entidad != 'COD_ENTIDAD' es para quitar la cabecera
    tablePosicionesRV: """
      select fec_posicion as fec_info, '${P_s_Sis_Origen_Operaciones}' as cod_sis_origen, cod_especie, cod_cartera, cod_tip_posicion as cod_disponibilidad,
      cod_entidad, num_posicion_inicial, num_posicion_final, data_date_part as data_date
      from ${database}.posiciones_rv
      where data_date_part = '${loadDate}'
      and cod_entidad != 'COD_ENTIDAD'
    """

    tableEspeciePortafolio: """
        select fec_dato, cod_cartera_sam, cod_especie_sam, cod_portafolio as cod_portafolio_rep
        from ${database}.relacion_especie_portafolio
        where data_date_part='${max_data_date_part}'
    """

    tableAliasEspecies: """
      SELECT coalesce(case when fec_data='' then null else fec_data end, fec_info) as fec_info,
      coalesce(case when cod_especie='' then null else cod_especie end, cod_especie_alias) as cod_especie,
      coalesce(case when cod_especie_ac='' then null else cod_especie_ac end, cod_especie_ac_alias) as cod_especie_ac,
      coalesce(case when cod_especie_aire='' then null else cod_especie_aire end, cod_especie_aire_alias) as cod_especie_aire
      FROM relacionEspecieAliasPrecio reap
      FULL OUTER JOIN
      (SELECT cod_especie_sam as cod_especie_alias, cod_especie_ac as cod_especie_ac_alias, cod_especie_aire as cod_especie_aire_alias,
      concat(substr(data_date_part,1,4),'-',substr(data_date_part,5,2),'-',substr(data_date_part,7,2)) as fec_info
      FROM ${database}.alias_especies
      WHERE cod_especie_sam <> '' and ind_vigente='S' and data_date_part<='${loadDate}'
      UNION ALL
      SELECT cod_especie_sab as cod_especie_alias, cod_especie_ac as cod_especie_ac_alias, cod_especie_aire as cod_especie_aire_alias,
      concat(substr(data_date_part,1,4),'-',substr(data_date_part,5,2),'-',substr(data_date_part,7,2)) as fec_info
      FROM ${database}.alias_especies
      WHERE cod_especie_sab <> '' and ind_vigente='S' and data_date_part<='${loadDate}'
      )ae
      ON reap.cod_especie=ae.cod_especie_alias
      and reap.fec_data=ae.fec_info
    """

    tableEspecieSAM: """
      SELECT cod_especie_sam as cod_especie, cod_especie_mae,
      cod_mon_emision as cod_moneda_emision, cod_moneda_pago, cod_tip_flujo, cod_base_anio as num_dias_anio,
      cod_base_mes as num_dia_mes, cod_tip_emisor as tip_emisor, cod_emisor,
      concat(substr(data_date_part,1,4),'-',substr(data_date_part,5,2),'-',substr(data_date_part,7,2)) as fec_info
      FROM ${database}.especies_sam
      WHERE data_date_part<='${loadDate}'
    """

    tableEspecieSAM_RV:"""
      SELECT supra_source as cod_sis_origen, cod_especie_sam as cod_especie, fec_emision as fec_inicio_emision, fec_vencimiento,
      concat(substr(data_date_part,1,4),'-',substr(data_date_part,5,2),'-',substr(data_date_part,7,2)) as fec_info,
      cod_tip_especie as cod_tip_instrumento
      FROM ${database}.especies_sam
      WHERE data_date_part<='${loadDate}'
      UNION ALL
      SELECT supra_source as cod_sis_origen, cod_especie, fec_actualizacion as fec_inicio_emision, fec_amortizacion as fec_vencimiento,
      concat(substr(data_date_part,1,4),'-',substr(data_date_part,5,2),'-',substr(data_date_part,7,2)) as fec_info,
      cast(cod_tip_especie_sab as STRING) as cod_tip_instrumento
      FROM ${database}.especies_rv
      WHERE data_date_part<='${loadDate}'
    """

    tableAssetControlFxSpot: """
      SELECT fec_precio as ${fecha_precio}, precio_valor_especie as ${coef_cer_fer}
      FROM ${database}.asset_control_fx_spot
      WHERE cod_especie_ac in ('${cod_especie_ac}')
      and data_date_part<='${loadDate}'
    """

    tableCalMercado: """
      SELECT concat(substr(fec_info,1,4),'-',substr(fec_info,5,2),'-',substr(fec_info,7,2)) as fec_info,
      coef_tasa_carry as coef_tasa_carry_full, coef_tasa_carry_alco_mnac as coef_tasa_alco_especies_mnac, coef_tasa_carry_alco_mext as coef_tasa_alco_especies_mext
      FROM ${database}.calendario_mercado
      WHERE data_date_part<='${loadDate}'
    """

    tableUnionAssetControl: """
      SELECT coalesce(case when fec_data='' then null else fec_data end, fec_info) as fec_info,
      coalesce(case when cod_especie_ac='' then null else cod_especie_ac end, cod_especie_ac_asset) as cod_especie_ac,
      coalesce(case when cod_tip_instrumento='B' then (precio_mercado/100) else precio_mercado end, precio_mercado_asset) as precio_mercado
      FROM relacionEspecieAliasPrecio reap
      FULL OUTER JOIN
      (
      SELECT fec_precio as fec_info, cod_especie_ac as cod_especie_ac_asset, precio_valor_especie as precio_mercado_asset, data_date_part
      FROM ${database}.asset_control_equities
      WHERE data_date_part<='${loadDate}'
      UNION ALL
      SELECT fec_precio as fec_info, cod_especie_ac as cod_especie_ac_asset, precio_valor_especie as precio_mercado_asset, data_date_part
      FROM ${database}.asset_control_fx_spot
      WHERE data_date_part<='${loadDate}'
      UNION ALL
      SELECT fec_precio as fec_info, cod_especie_ac as cod_especie_ac_asset, (precio_valor_especie/100) as precio_mercado_asset, data_date_part
      FROM ${database}.asset_control_bonos
      WHERE data_date_part<='${loadDate}'
      ) aacc
      ON reap.cod_especie_ac=aacc.cod_especie_ac_asset
      and reap.fec_data=aacc.fec_info
    """

    tablePreciosDevengadosBonos: """
      SELECT fec_dato, cod_especie_sam, precio_devengado
      FROM ${database}.precios_devengados_bonos
      WHERE data_date_part<='${loadDate}'
    """

    tableCuponesBonos: """
      SELECT fec_info as ${fecha_info}, cod_sis_origen, cod_especie, cod_cartera, cod_portafolio, cod_tip_posicion as cod_disponibilidad,
      imp_cupones as ${col_imp_cupones}
      FROM  ${database}.cupones_bonos
      WHERE data_date_part <='${loadDate}'
    """

    tableFecInfoAnt: """
      SELECT fec_yyyy_mm_dd as fec_info, laborable_anterior_yyyy_mm_dd as fec_info_ant, dia as dia,
      cast(substr(laborable_anterior_yyyymmdd,7,2) as int) as dia_ant
      FROM ${database}.calendario
      WHERE data_date_part='${max_data_date_part}'
    """

    tableEspeciesTotal: """
      SELECT fec_info as fec_info_ant, cod_sis_origen, cod_especie, cod_cartera, cod_disponibilidad,
      coef_carry_indexado as coef_carry_indexado_ant, coef_carry_indexado_liq as coef_carry_indexado_ant_liq,
      num_posicion_final as num_posicion_final_ant, data_date_part
      FROM ${database}.especies
      WHERE data_date_part<='${loadDate}'
    """

    tableCalendarioMercado: """
       SELECT concat(substr(fec_info,1,4),'-',substr(fec_info,5,2),'-',substr(fec_info,7,2)) as fec_info,
       coef_factor_acumulado_especies, coef_factor_indexacion_especies,
       coef_factor_acumulado_especies_alco_mnac, coef_factor_acumulado_especies_alco_mext,
       coef_factor_indexacion_especies_alco_mnac, coef_factor_indexacion_especies_alco_mext
       FROM ${database}.calendario_mercado
       WHERE data_date_part<='${loadDate}'
    """

    tableCalendarioMercadoAnioAnt: """
       SELECT concat(substr(fec_info,1,4),'-',substr(fec_info,5,2),'-',substr(fec_info,7,2)) as fec_info,
       coef_factor_acumulado_especies as coef_factor_acumulado_especies_anio_ant,
       coef_factor_indexacion_especies as coef_factor_indexacion_especies_anio_ant,
       coef_factor_acumulado_especies_alco_mnac as coef_factor_acumulado_especies_alco_mnac_anio_ant,
       coef_factor_acumulado_especies_alco_mext as coef_factor_acumulado_especies_alco_mext_anio_ant,
       coef_factor_indexacion_especies_alco_mnac as coef_factor_indexacion_especies_alco_mnac_anio_ant,
       coef_factor_indexacion_especies_alco_mext as coef_factor_indexacion_especies_alco_mext_anio_ant
       FROM ${database}.calendario_mercado
       WHERE fec_info=concat(cast((cast(substr('${loadDate}',1,4) as int)-1) as string),'1231')
    """

    tableArgStaging: """
      select cod_sis_origen, cod_especie, cod_cartera, fi_st, sum(num_posicion_inicial) as sum_posi_non_neg_agrup from
      (
      select t1.cod_sis_origen, t1.cod_especie, t1.cod_cartera, t1.num_posicion_inicial, t2.final_stage as fi_st
      from
         ( select max(data_timestamp_part) as tstamp from ${ifrs9_database}.${P_s_Modellica_Modellica_Staging_Tablename}
         ) t3, ${database}.${table} t1, ${ifrs9_database}.${P_s_Modellica_Modellica_Staging_Tablename} t2
      where t1.num_posicion_inicial >= 0 and t1.cod_sis_origen in ${P_s_Sis_origen_MESAMF_STR} and t1.cod_cartera in ${P_s_Cartera_Provisiones_STR} and
      t1.cod_especie=t2.idf_cto_ifrs and t2.bucket_part in ${P_s_Modellica_Bucket_Part_STR} and t2.fin_part in ${P_s_Modellica_Fin_Part_STR}
      and t2.data_date_part = '${loadDate}' and t3.tstamp=t2.data_timestamp_part
      ) parcial
      group by cod_sis_origen, cod_especie, cod_cartera, fi_st
    """

    tablePDOrigBonos: """
      SELECT t1.fec_info, t1.cod_sis_origen, t1.cod_especie, t1.cod_cartera, t1.cod_disponibilidad,
      t2.pd_originacion as pd_lt_ifrs9_temporal
      FROM ${database}.${table} t1, ${database}.pd_originacion_bonos t2
      where t1.cod_especie=t2.cod_especie_sam and t1.cod_cartera=t2.cod_cartera and
      t1.cod_cartera in ${P_s_Cartera_Provisiones_STR} and t1.cod_sis_origen in ${P_s_Sis_origen_MESAMF_STR} and
      t2.data_date_part = '${max_data_date_part}'
    """

    tableIFRS9tmp: """
      SELECT fec_info, cod_sis_origen, cod_especie, cod_cartera, cod_disponibilidad,
      pd_lt_ifrs9_temporal
      FROM ${database}.${table}
      where data_date_part='${ultDiaMesAnt}'
    """

    tableArgExpectedLoss: """
      SELECT t1.cod_sis_origen, t1.cod_especie, t1.cod_cartera,
      t2.pd_lt_ifrs9_temporal as pd_lt_ifrs9_temporal_post_mod, t2.portfolio_ifrs9
      FROM (
       select max(data_timestamp_part) as tstamp from ${ifrs9_database}.${P_s_Modellica_Modellica_ExpectedLoss_Tablename}
      ) t3, ${database}.${table} t1, ${ifrs9_database}.${P_s_Modellica_Modellica_ExpectedLoss_Tablename} t2
      where t1.cod_sis_origen in ${P_s_Sis_origen_MESAMF_STR} and t1.cod_cartera in ${P_s_Cartera_Provisiones_STR} and t1.cod_especie=t2.idf_cto_ifrs
      and t2.bucket_part in ${P_s_Modellica_Bucket_Part_STR} and t2.fin_part in ${P_s_Modellica_Fin_Part_STR}
      and t2.data_date_part = '${loadDate}' and t3.tstamp=t2.data_timestamp_part
    """

    tableMinimaFecInfoBonosRV: """
      select
      coalesce(cbam.cod_especie_sis_origen, cbliq.cod_especie) as cod_especie,
      coalesce(cbam.cod_disponibilidad, cbliq.cod_tip_posicion) as cod_disponibilidad,
      coalesce(cbam.cod_cartera, cbliq.cod_cartera) as cod_cartera,
      coalesce(cbam.cod_sis_origen, cbliq.cod_sis_origen) as cod_sis_origen,
      --cbam.fec_liquidacion_minima,
      --cbam.fec_concertacion_minima,
      --cbliq.min_fec_liq_cupon,
      --opsam.fec_minima_concertacion_anterior,
          least(
          case when cbam.fec_liquidacion_minima = '0' or cbam.fec_liquidacion_minima is null then '9999-99-99' else cbam.fec_liquidacion_minima end,
          case when cbam.fec_concertacion_minima = '0' or cbam.fec_concertacion_minima is null then '9999-99-99' else cbam.fec_concertacion_minima end,
          case when cbliq.min_fec_liq_cupon = '0' or cbliq.min_fec_liq_cupon is null then '9999-99-99' else cbliq.min_fec_liq_cupon end,
          case when opsam.fec_minima_concertacion_anterior = '0' or opsam.fec_minima_concertacion_anterior is null then '9999-99-99' else opsam.fec_minima_concertacion_anterior end
          ) as minima_fec_info_bonos,
      cbam.fec_concertacion_minima as minima_fec_info_rv
      from
      (
          select cod_especie_sis_origen, cod_disponibilidad, cod_cartera, cod_sis_origen,
          min(fec_liquidacion_minima) as fec_liquidacion_minima, min(fec_concertacion_minima) as fec_concertacion_minima
          from ${database}.metricas_operaciones_bam
          where data_date_part = '${loadDate}' and
          fec_dato = '${loadDate}'
          group by cod_especie_sis_origen, cod_disponibilidad, cod_cartera,cod_sis_origen
      ) cbam
      full outer join
      (
          select cod_especie, cod_tip_posicion, cod_cartera, cod_sis_origen, min(fec_liquidacion) as min_fec_liq_cupon
          from ${database}.cupones_bonos_liq
          where data_date_part = '${loadDate}' and
          fec_liquidacion >= '${fec_info_liquidacion_minima}'
          group by cod_especie, cod_tip_posicion, cod_cartera, cod_sis_origen
      ) cbliq on
      cbam.cod_especie_sis_origen = cbliq.cod_especie and
      cbam.cod_disponibilidad = cbliq.cod_tip_posicion and
      cbam.cod_cartera = cbliq.cod_cartera and
      cbam.cod_sis_origen = cbliq.cod_sis_origen
      left outer join
      (
          select cod_sis_origen, cod_especie_sis_origen, cod_disponibilidad, cod_cartera, min(fec_concertacion_anterior) as fec_minima_concertacion_anterior
          from ${database}.operaciones_bam
          where data_date_part = '${loadDate}'
          and cod_sis_origen = 'MESAMF'
          group by cod_sis_origen, cod_especie_sis_origen, cod_disponibilidad, cod_cartera
      ) opsam on
      cbam.cod_especie_sis_origen = opsam.cod_especie_sis_origen and
      cbam.cod_disponibilidad = opsam.cod_disponibilidad and
      cbam.cod_cartera = opsam.cod_cartera and
      cbam.cod_sis_origen = opsam.cod_sis_origen
    """

    tableCuboBamConcertacion: """
      select fec_concertacion as fec_info, cod_especie_sis_origen as cod_especie, cod_disponibilidad, cod_cartera, cod_sis_origen,
      precio_medio_compra_conc as precio_compra,
      precio_medio_venta_conc as precio_venta,
      num_cantidad_comprada_conc as num_cantidad_comprada,
      num_cantidad_vendida_conc as num_cantidad_vendida
      from ${database}.metricas_operaciones_bam
      where data_date_part = '${loadDate}' and
      grouping__id = '15393'
    """

    tableCuboBamLiquidacion: """
      select fec_liquidacion as fec_info, cod_especie_sis_origen as cod_especie, cod_disponibilidad, cod_cartera, cod_sis_origen,
      precio_medio_compra_liq as precio_compra_liq,
      precio_medio_venta_liq as precio_venta_liq,
      num_cantidad_comprada_liq,
      num_cantidad_vendida_liq --,
      --num_posicion_inicial_liq,
      --num_posicion_final_liq
      from ${database}.metricas_operaciones_bam
      where data_date_part = '${fecha}' and
      grouping__id = '23585'
    """

    tableCuboBamLiquidacionPosiciones: """
      select cod_especie_sis_origen as cod_especie, cod_disponibilidad, cod_cartera, cod_sis_origen,
      fec_liquidacion as fec_liquidacion_cbam,
      num_posicion_inicial_liq as num_posicion_inicial_liq_cbam,
      num_posicion_final_liq as num_posicion_final_liq_cbam
      from ${database}.metricas_operaciones_bam
      where data_date_part = '${loadDate}' and fec_liquidacion is not null and
      grouping__id = '23585'
    """

    tableCuponesBonosLiq: """
      select fec_liquidacion as fec_info, cod_sis_origen, cod_especie, cod_cartera, cod_tip_posicion as cod_disponibilidad,
      sum(imp_cupones) as ${imp_cupones_liq}
      from ${database}.cupones_bonos_liq
      --where  data_date_part = '${fecha}' and
      where fec_info >= '${min_fec_info}' and fec_info <= '${max_fec_info}'
      group by fec_liquidacion,cod_sis_origen,cod_especie,cod_cartera,cod_tip_posicion
    """

    query_imp_rof_dia_alco: """
      case when num_posicion_inicial = 0 and num_posicion_final = 0 and num_cantidad_comprada= 0 and num_cantidad_vendida = 0
      then
        0
      else
          --Si FECHA_INFO = FEC_VENCIMIENTO
          case when (fec_info = fec_vencimiento)
          then
            0
          else
            -- Tablon_MR_Especie.IMP_INTERMEDIACION(t) + Tablon_MR_Especie.IMP_REALIZADO_CONTABLE(t)
            imp_intermediacion + imp_realizado_contable
          end
      end
    """

    query_imp_margen_dia_alco: """
      case when num_posicion_inicial = 0 and num_posicion_final = 0 and num_cantidad_comprada= 0 and num_cantidad_vendida = 0
      then
        0
      else
          --Si FECHA_INFO = FEC_VENCIMIENTO
          case when (fec_info = fec_vencimiento)
          then
          -- Tablon_MR_ESPECIES.IMP_INTERMEDIACION (t) + Tablon_MR_ESPECIES.IMP_REALIZADO_CONTABLE(t) + Tablon_MR_ESPECIES.IMP_REVALUO_DIA_CONTABLE(t) + Tablon_MR_ESPECIES.IMP_REVALUO_DIA_ANT_CONTABLE(t) + IMP_CUPONES (t)
            imp_intermediacion + imp_realizado_contable + imp_revaluo_dia_contable + imp_revaluo_dia_ant_contable + imp_cupones_nvl
          else
            -- Tablon_MR_ESPECIES.IMP_REVALUO_DIA_CONTABLE(t) + Tablon_MR_ESPECIES.IMP_REVALUO_DIA_ANT_CONTABLE(t) + IMP_CUPONES (t)
            imp_revaluo_dia_contable + imp_revaluo_dia_ant_contable + imp_cupones_nvl
          end
       end
    """

    createTablonEspecies: """
    CREATE EXTERNAL TABLE IF NOT EXISTS ${database}.${table} (
      fec_info STRING,
      cod_sis_origen STRING,
      cod_especie STRING,
      cod_cartera STRING,
      cod_portafolio STRING,
      cod_disponibilidad STRING,
      cod_especie_ac STRING,
      cod_especie_aire STRING,
      cod_especie_mae STRING,
      cod_entidad STRING,
      cod_tip_instrumento STRING,
      cod_moneda_emision STRING,
      cod_moneda_pago STRING,
      cod_tip_flujo STRING,
      fec_inicio_emision STRING,
      fec_vencimiento STRING,
      num_dias_anio DECIMAL(3,0),
      num_dia_mes STRING,
      coef_cer_fec_emision DECIMAL(14,8),
      coef_cer_fec_vencimiento DECIMAL(14,8),
      imp_cotizacion_usd DECIMAL(14,8),
      coef_tasa_carry DECIMAL(14,8),
      precio_venta DECIMAL(14,8),
      precio_compra DECIMAL(14,8),
      precio_mercado DECIMAL(14,8),
      precio_devengado DECIMAL(14,8),
      precio_contable DECIMAL(14,8),
      num_cantidad_comprada DECIMAL(26,3),
      num_cantidad_vendida DECIMAL(26,3),
      tir DECIMAL(14,8),
      num_posicion_inicial DECIMAL(26,3),
      num_posicion_final DECIMAL(26,3),
      tip_emisor STRING,
      cod_emisor STRING,
      imp_revaluo_dia_merc DECIMAL(29,6),
      imp_revaluo_dia_ant_merc DECIMAL(29,6),
      imp_realizado_merc DECIMAL(29,6),
      imp_neto_dia_merc DECIMAL(29,6),
      imp_clean_pl_merc DECIMAL(29,6),
      imp_posicion_merc DECIMAL(29,6),
      imp_bruto_dia_merc DECIMAL(29,6),
      imp_revaluo_dia_contable DECIMAL(29,6),
      imp_revaluo_dia_ant_contable DECIMAL(29,6),
      imp_realizado_contable DECIMAL(29,6),
      imp_neto_dia_contable DECIMAL(29,6),
      imp_clean_pl_contable DECIMAL(29,6),
      imp_posicion_contable DECIMAL(29,6),
      imp_bruto_dia_contable DECIMAL(29,6),
      imp_intermediacion DECIMAL(29,6),
      imp_cost_of_carry DECIMAL(29,6),
      imp_cupones DECIMAL(29,6),
      imp_cash DECIMAL(29,6),
      coef_carry_indexado DECIMAL(31,8),
      cod_portafolio_seg STRING,
      provision_amount DECIMAL(30,15),
      pd_lt_ifrs9_temporal STRING,
      final_stage STRING,
      num_meses_vigencia DECIMAL(5,0),
      portfolio_ifrs9 STRING,
      num_plazo_remanente DECIMAL(5,0),
      imp_neto_mes_merc DECIMAL(29,6),
      precio_venta_liq DECIMAL(14,8),
      precio_compra_liq DECIMAL(14,8),
      num_cantidad_comprada_liq DECIMAL(26,3),
      num_cantidad_vendida_liq DECIMAL(26,3),
      imp_revaluo_dia_merc_liq DECIMAL(29,6),
      imp_revaluo_dia_ant_merc_liq DECIMAL(29,6),
      imp_realizado_merc_liq DECIMAL(29,6),
      imp_neto_dia_merc_liq DECIMAL(29,6),
      imp_clean_pl_merc_liq DECIMAL(29,6),
      imp_posicion_merc_liq DECIMAL(29,6),
      imp_bruto_dia_merc_liq DECIMAL(29,6),
      imp_revaluo_dia_contable_liq DECIMAL(29,6),
      imp_revaluo_dia_ant_contable_liq DECIMAL(29,6),
      imp_realizado_contable_liq DECIMAL(29,6),
      imp_neto_dia_contable_liq DECIMAL(29,6),
      imp_clean_pl_contable_liq DECIMAL(29,6),
      imp_posicion_contable_liq DECIMAL(29,6),
      imp_bruto_dia_contable_liq DECIMAL(29,6),
      imp_intermediacion_liq DECIMAL(29,6),
      imp_cost_of_carry_liq DECIMAL(29,6),
      imp_cash_liq DECIMAL(29,6),
      coef_carry_indexado_liq DECIMAL(31,8),
      imp_neto_mes_merc_liq DECIMAL(29,6),
      num_posicion_final_liq DECIMAL(26,3),
      imp_cupones_liq DECIMAL(29,6),
      num_posicion_inicial_liq DECIMAL(26,3),
      imp_rof_dia_alco DECIMAL(29,6),
      imp_margen_dia_alco DECIMAL(29,6),
      periodicidad STRING

       ) partitioned by (
        data_date_part STRING
       )
        stored as parquet
     """

    createTablonEspeciesInconsistencias: """
    CREATE EXTERNAL TABLE IF NOT EXISTS ${database}.${table}_inconsistencias (
        fec_info	string,
        cod_sis_origen	string,
        cod_especie	string,
        cod_cartera	string,
        cod_portafolio	array<string>,
        cod_disponibilidad	string,
        cod_especie_ac	array<string>,
        cod_especie_aire	array<string>,
        cod_especie_mae	array<string>,
        cod_entidad	array<string>,
        cod_tip_instrumento	array<string>,
        cod_moneda_emision	array<string>,
        cod_moneda_pago	array<string>,
        cod_tip_flujo	array<string>,
        fec_inicio_emision	array<string>,
        fec_vencimiento	array<string>,
        num_dias_anio	array<decimal(3,0)>,
        num_dia_mes	array<string>,
        coef_cer_fec_emision	array<decimal(14,8)>,
        coef_cer_fec_vencimiento	array<decimal(14,8)>,
        imp_cotizacion_usd	array<decimal(14,8)>,
        coef_tasa_carry	array<decimal(14,8)>,
        precio_venta	array<decimal(14,8)>,
        precio_compra	array<decimal(14,8)>,
        precio_mercado	array<decimal(14,8)>,
        precio_devengado	array<decimal(14,8)>,
        precio_contable	array<decimal(14,8)>,
        num_cantidad_comprada	array<decimal(26,3)>,
        num_cantidad_vendida	array<decimal(26,3)>,
        tir	array<decimal(14,8)>,
        num_posicion_inicial	array<decimal(26,3)>,
        num_posicion_final	array<decimal(26,3)>,
        tip_emisor	array<string>,
        cod_emisor	array<string>,
        imp_revaluo_dia_merc	array<decimal(29,6)>,
        imp_revaluo_dia_ant_merc	array<decimal(29,6)>,
        imp_realizado_merc	array<decimal(29,6)>,
        imp_neto_dia_merc	array<decimal(29,6)>,
        imp_clean_pl_merc	array<decimal(29,6)>,
        imp_posicion_merc	array<decimal(29,6)>,
        imp_bruto_dia_merc	array<decimal(29,6)>,
        imp_revaluo_dia_contable	array<decimal(29,6)>,
        imp_revaluo_dia_ant_contable	array<decimal(29,6)>,
        imp_realizado_contable	array<decimal(29,6)>,
        imp_neto_dia_contable	array<decimal(29,6)>,
        imp_clean_pl_contable	array<decimal(29,6)>,
        imp_posicion_contable	array<decimal(29,6)>,
        imp_bruto_dia_contable	array<decimal(29,6)>,
        imp_intermediacion	array<decimal(29,6)>,
        imp_cost_of_carry	array<decimal(29,6)>,
        imp_cupones	array<decimal(29,6)>,
        imp_cash	array<decimal(29,6)>,
        coef_carry_indexado	array<decimal(31,8)>,
        cod_portafolio_seg	array<string>,
        provision_amount	array<decimal(30,15)>,
        pd_lt_ifrs9_temporal	array<string>,
        final_stage	array<string>,
        num_meses_vigencia	array<decimal(5,0)>,
        portfolio_ifrs9	array<string>,
        num_plazo_remanente	array<decimal(5,0)>,
        imp_neto_mes_merc	array<decimal(29,6)>,
        precio_venta_liq	array<decimal(14,8)>,
        precio_compra_liq	array<decimal(14,8)>,
        num_cantidad_comprada_liq	array<decimal(26,3)>,
        num_cantidad_vendida_liq	array<decimal(26,3)>,
        imp_revaluo_dia_merc_liq	array<decimal(29,6)>,
        imp_revaluo_dia_ant_merc_liq	array<decimal(29,6)>,
        imp_realizado_merc_liq	array<decimal(29,6)>,
        imp_neto_dia_merc_liq	array<decimal(29,6)>,
        imp_clean_pl_merc_liq	array<decimal(29,6)>,
        imp_posicion_merc_liq	array<decimal(29,6)>,
        imp_bruto_dia_merc_liq	array<decimal(29,6)>,
        imp_revaluo_dia_contable_liq	array<decimal(29,6)>,
        imp_revaluo_dia_ant_contable_liq	array<decimal(29,6)>,
        imp_realizado_contable_liq	array<decimal(29,6)>,
        imp_neto_dia_contable_liq	array<decimal(29,6)>,
        imp_clean_pl_contable_liq	array<decimal(29,6)>,
        imp_posicion_contable_liq	array<decimal(29,6)>,
        imp_bruto_dia_contable_liq	array<decimal(29,6)>,
        imp_intermediacion_liq	array<decimal(29,6)>,
        imp_cost_of_carry_liq	array<decimal(29,6)>,
        imp_cash_liq	array<decimal(29,6)>,
        coef_carry_indexado_liq	array<decimal(31,8)>,
        imp_neto_mes_merc_liq	array<decimal(29,6)>,
        num_posicion_final_liq	array<decimal(26,3)>,
        imp_cupones_liq	array<decimal(21,3)>,
        num_posicion_inicial_liq	array<decimal(26,3)>,
        imp_rof_dia_alco	array<decimal(29,6)>,
        imp_margen_dia_alco	array<decimal(29,6)>,
        reason	string,
        periodicidad	string
     ) PARTITIONED BY (data_date_part STRING)
     STORED AS PARQUET
     """

    selectTablonEspecies: """
    SELECT * FROM ${database}.${table} where data_date_part = '${loadDate}'
    """

    tableEspeciesAnt: """

    SELECT
    ESP.*, CM.coef_factor_acumulado_especies, CM.coef_factor_indexacion_especies,
    CM.coef_factor_acumulado_especies_alco_mnac, CM.coef_factor_indexacion_especies_alco_mnac,
    CM.coef_factor_acumulado_especies_alco_mext, CM.coef_factor_indexacion_especies_alco_mext,
    (case when num_posicion_final_aux = 0 then 0 else precio_mercado * num_posicion_final_aux end) as imp_posicion_merc_aux,
    (case when num_posicion_final_aux_liq = 0 then 0 else precio_mercado * num_posicion_final_aux_liq end) as imp_posicion_merc_aux_liq
    FROM(
        SELECT
        data_date_part,
        fec_info,
        cod_sis_origen,
        cod_especie,
        cod_cartera,
        cod_disponibilidad,
        cod_moneda_emision,

        nvl(num_posicion_final,0) as num_posicion_final_aux,
        coef_carry_indexado as coef_carry_indexado_aux,
        imp_cost_of_carry as imp_cost_of_carry_aux,

        nvl(num_posicion_final_liq,0) as num_posicion_final_aux_liq,
        coef_carry_indexado_liq as coef_carry_indexado_aux_liq,
        imp_cost_of_carry_liq as imp_cost_of_carry_aux_liq

        FROM (

            SELECT
            dense_rank() over (partition by cod_sis_origen, cod_especie, cod_cartera, cod_disponibilidad order by data_date_part desc) as rnk2, *
            FROM (
                SELECT
                data_date_part,

                rank() over(partition by fec_info,cod_sis_origen,cod_especie,cod_cartera,cod_disponibilidad order by data_date_part desc) as rnk,

                fec_info,
                cod_sis_origen,
                cod_especie,
                cod_cartera,
                cod_disponibilidad,
                cod_moneda_emision,

                num_posicion_final,
                coef_carry_indexado,
                imp_cost_of_carry,

                num_posicion_final_liq,
                coef_carry_indexado_liq,
                imp_cost_of_carry_liq

                FROM ${database}.especies WHERE data_date_part <= '${loadDate}'
            ) foo
            WHERE rnk = 1  --NOS QUEDAMOS CON LA FEC_INFO-ESPECIE QUE VINO EN EL DATA_DATE_PART MÁS RECIENTE
        ) foo2
        where rnk2 = 1 --NOS QUEDAMOS CON LA DATA_DATE_PART DE HOY

        UNION ALL

        SELECT
            data_date_part,
            fec_info,
            cod_sis_origen,
            cod_especie,
            cod_cartera,
            cod_disponibilidad,
            cod_moneda_emision,
            nvl(num_posicion_final,0) as num_posicion_final_aux,
            coef_carry_indexado as coef_carry_indexado_aux,
            imp_cost_of_carry as imp_cost_of_carry_aux,

            nvl(num_posicion_final_liq,0) as num_posicion_final_aux_liq,
            coef_carry_indexado_liq as coef_carry_indexado_aux_liq,
            imp_cost_of_carry_liq as imp_cost_of_carry_aux_liq

        FROM (
            SELECT rank() over (partition by cod_sis_origen,cod_especie,cod_cartera,cod_disponibilidad order by fec_info desc) as rnk3, * FROM (

                SELECT
                dense_rank() over (partition by cod_sis_origen,cod_especie,cod_cartera,cod_disponibilidad order by data_date_part desc) as rnk2, *
                FROM (
                    SELECT
                    data_date_part,

                    rank() over(partition by fec_info,cod_sis_origen,cod_especie,cod_cartera,cod_disponibilidad order by data_date_part desc) as rnk,

                    fec_info,
                    cod_sis_origen,
                    cod_especie,
                    cod_cartera,
                    cod_disponibilidad,
                    cod_moneda_emision,

                    num_posicion_final,
                    coef_carry_indexado,
                    imp_cost_of_carry,

                    num_posicion_final_liq,
                    coef_carry_indexado_liq,
                    imp_cost_of_carry_liq

                    FROM ${database}.especies WHERE data_date_part <= '${loadDate}'
                ) foo
                WHERE rnk = 1  --NOS QUEDAMOS CON LA FEC_INFO-ESPECIE QUE VINO EN EL DATA_DATE_PART MÁS RECIENTE
            ) foo2
            where ${rnk2}
        ) foo3
        where ${rnk3}

    ) ESP

    LEFT OUTER JOIN

    (
      select concat_ws('-',substr(fec_info,1,4),substr(fec_info,5,2),substr(fec_info,7,2)) as fec_info,
      coef_factor_acumulado_especies,
      coef_factor_indexacion_especies,
      coef_factor_acumulado_especies_alco_mnac,
      coef_factor_acumulado_especies_alco_mext,
      coef_factor_indexacion_especies_alco_mnac,
      coef_factor_indexacion_especies_alco_mext
      from ${database}.calendario_mercado
    ) CM ON

    ESP.fec_info = CM.fec_info

    LEFT OUTER JOIN
    (
        SELECT coalesce(case when fec_data='' then null else fec_data end, fec_info) as fec_info,
        coalesce(case when cod_especie='' then null else cod_especie end, cod_especie_alias) as cod_especie,
        coalesce(case when cod_especie_ac='' then null else cod_especie_ac end, cod_especie_ac_alias) as cod_especie_ac
        FROM relacionEspecieAliasPrecio reap
        FULL OUTER JOIN
        (SELECT cod_especie_sam as cod_especie_alias, cod_especie_ac as cod_especie_ac_alias,
        concat(substr(data_date_part,1,4),'-',substr(data_date_part,5,2),'-',substr(data_date_part,7,2)) as fec_info
        FROM ${database}.alias_especies
        WHERE cod_especie_sam <> '' and ind_vigente='S' and data_date_part<='${loadDate}'
        UNION ALL
        SELECT cod_especie_sab as cod_especie_alias, cod_especie_ac as cod_especie_ac_alias,
        concat(substr(data_date_part,1,4),'-',substr(data_date_part,5,2),'-',substr(data_date_part,7,2)) as fec_info
        FROM ${database}.alias_especies
        WHERE cod_especie_sab <> '' and ind_vigente='S' and data_date_part<='${loadDate}'
        )ae
        ON reap.cod_especie=ae.cod_especie_alias
        and reap.fec_data=ae.fec_info
    ) AE ON
    ESP.fec_info = AE.fec_info and
    ESP.cod_especie = AE.cod_especie

    LEFT OUTER JOIN
    (
        SELECT coalesce(case when fec_data='' then null else fec_data end, fec_info) as fec_info,
        coalesce(case when cod_especie_ac='' then null else cod_especie_ac end, cod_especie_ac_asset) as cod_especie_ac,
        coalesce(case when cod_tip_instrumento='B' then (precio_mercado/100) else precio_mercado end, precio_mercado_asset) as precio_mercado
        FROM relacionEspecieAliasPrecio reap
        FULL OUTER JOIN
        (
        SELECT fec_precio as fec_info, cod_especie_ac as cod_especie_ac_asset, precio_valor_especie as precio_mercado_asset, data_date_part
        FROM ${database}.asset_control_equities
        WHERE data_date_part<='${loadDate}'
        UNION ALL
        SELECT fec_precio as fec_info, cod_especie_ac as cod_especie_ac_asset, precio_valor_especie as precio_mercado_asset, data_date_part
        FROM ${database}.asset_control_fx_spot
        WHERE data_date_part<='${loadDate}'
        UNION ALL
        SELECT fec_precio as fec_info, cod_especie_ac as cod_especie_ac_asset, (precio_valor_especie/100) as precio_mercado_asset, data_date_part
        FROM ${database}.asset_control_bonos
        WHERE data_date_part<='${loadDate}'
        ) aacc
        ON reap.cod_especie_ac=aacc.cod_especie_ac_asset
        and reap.fec_data=aacc.fec_info
    ) PM ON
    ESP.fec_info = PM.fec_info and
    AE.cod_especie_ac = PM.cod_especie_ac
    """

    tableEspeciesAnt2: """
    SELECT
    ESP.*, CM.coef_factor_indexacion_especies, CM.coef_factor_indexacion_especies_alco_mnac, CM.coef_factor_indexacion_especies_alco_mext,
    dia, dia_ant, primer_lab_anio_fec_info, primer_lab_mes_natural, primer_lab_mes_nonatural, no_primer_lab_ant_si_lab
    FROM(
        SELECT
        data_date_part,
        fec_info,
        cod_sis_origen,
        cod_especie,
        cod_cartera,
        cod_disponibilidad,
        cod_moneda_emision,
        imp_cost_of_carry as imp_cost_of_carry_aux,
        imp_cost_of_carry_liq as imp_cost_of_carry_aux_liq,

        imp_neto_dia_merc as imp_neto_dia_merc_aux,
        imp_neto_dia_merc_liq as imp_neto_dia_merc_aux_liq,

        imp_neto_mes_merc as imp_neto_mes_merc_aux,
        imp_neto_mes_merc_liq as imp_neto_mes_merc_aux_liq
        FROM (

            SELECT
            dense_rank() over (partition by cod_sis_origen, cod_especie, cod_cartera, cod_disponibilidad order by data_date_part desc) as rnk2, *
            FROM (
                SELECT
                data_date_part,

                rank() over(partition by fec_info,cod_sis_origen,cod_especie,cod_cartera,cod_disponibilidad order by data_date_part desc) as rnk,

                fec_info,
                cod_sis_origen,
                cod_especie,
                cod_cartera,
                cod_disponibilidad,
                cod_moneda_emision,

                imp_cost_of_carry,
                imp_cost_of_carry_liq,

                imp_neto_dia_merc,
                imp_neto_dia_merc_liq,

                imp_neto_mes_merc,
                imp_neto_mes_merc_liq

                FROM ${database}.especies WHERE data_date_part <= '${loadDate}'
            ) foo
            WHERE rnk = 1  --NOS QUEDAMOS CON LA FEC_INFO-ESPECIE QUE VINO EN EL DATA_DATE_PART MÁS RECIENTE
        ) foo2
        where rnk2 = 1 --NOS QUEDAMOS CON LA DATA_DATE_PART DE HOY

        UNION ALL

        SELECT
            data_date_part,
            fec_info,
            cod_sis_origen,
            cod_especie,
            cod_cartera,
            cod_disponibilidad,
            cod_moneda_emision,

            imp_cost_of_carry as imp_cost_of_carry_aux,
            imp_cost_of_carry_liq as imp_cost_of_carry_aux_liq,

            imp_neto_dia_merc as imp_neto_dia_merc_aux,
            imp_neto_dia_merc_liq as imp_neto_dia_merc_aux_liq,
            imp_neto_mes_merc as imp_neto_mes_merc_aux,
            imp_neto_mes_merc_liq as imp_neto_mes_merc_aux_liq

        FROM (
            SELECT rank() over (partition by cod_sis_origen,cod_especie,cod_cartera,cod_disponibilidad order by fec_info desc) as rnk3, * FROM (

                SELECT
                dense_rank() over (partition by cod_sis_origen,cod_especie,cod_cartera,cod_disponibilidad order by data_date_part desc) as rnk2, *
                FROM (
                    SELECT
                    data_date_part,

                    rank() over(partition by fec_info,cod_sis_origen,cod_especie,cod_cartera,cod_disponibilidad order by data_date_part desc) as rnk,

                    fec_info,
                    cod_sis_origen,
                    cod_especie,
                    cod_cartera,
                    cod_disponibilidad,
                    cod_moneda_emision,

                    imp_cost_of_carry,
                    imp_cost_of_carry_liq,

                    imp_neto_dia_merc,
                    imp_neto_dia_merc_liq,
                    imp_neto_mes_merc,
                    imp_neto_mes_merc_liq

                    FROM ${database}.especies WHERE data_date_part <= '${loadDate}'
                ) foo
                WHERE rnk = 1  --NOS QUEDAMOS CON LA FEC_INFO-ESPECIE QUE VINO EN EL DATA_DATE_PART MÁS RECIENTE
            ) foo2
            where ${rnk2}
        ) foo3
        where ${rnk3}

    ) ESP

    LEFT OUTER JOIN

    (
      SELECT concat_ws('-',substr(fec_info,1,4),substr(fec_info,5,2),substr(fec_info,7,2)) as fec_info, coef_factor_indexacion_especies, coef_factor_indexacion_especies_alco_mnac, coef_factor_indexacion_especies_alco_mext
      FROM ${database}.calendario_mercado
    ) CM ON

    ESP.fec_info = CM.fec_info

    LEFT OUTER JOIN
    (
        SELECT fec_yyyy_mm_dd as fec_info, laborable_anterior_yyyy_mm_dd as fec_info_ant, dia as dia,
        cast(substr(laborable_anterior_yyyymmdd,7,2) as int) as dia_ant
        FROM ${database}.calendario
        WHERE data_date_part='${max_data_date_part}'
    ) CALC1 ON
    ESP.fec_info = CALC1.fec_info

    LEFT OUTER JOIN
    (
        select fec_yyyy_mm_dd as primer_lab_anio_fec_info
        from ${database}.calendario cal
        where (substr(laborable_anterior_yyyymmdd,1,4)) < (substr(fec_yyyymmdd,1,4))
        and flag_laborable=1 and cal.data_date_part = '${max_data_date_part}'
    ) CALC2 ON
    substr(ESP.fec_info,1,4)= substr(CALC2.primer_lab_anio_fec_info,1,4)

    LEFT OUTER JOIN
    (
        select fec_yyyy_mm_dd as primer_lab_mes_natural
        from ${database}.calendario cal
        where laborable_anterior_yyyymmdd=laborable_mes_anterior_yyyymmdd
        and flag_laborable=1 and cal.dia=1 and cal.data_date_part = '${max_data_date_part}'
    ) CALC3 ON
    substr(ESP.fec_info,1,7)= substr(CALC3.primer_lab_mes_natural,1,7)

    LEFT OUTER JOIN
    (
        select fec_yyyy_mm_dd as primer_lab_mes_nonatural
        from ${database}.calendario cal
        where laborable_anterior_yyyymmdd=laborable_mes_anterior_yyyymmdd
        and flag_laborable=1 and cal.dia>1 and cal.data_date_part = '${max_data_date_part}'
    ) CALC4 ON
    substr(ESP.fec_info,1,7)= substr(CALC4.primer_lab_mes_nonatural,1,7)

    LEFT OUTER JOIN
    (
        select fec_yyyy_mm_dd as no_primer_lab_ant_si_lab
        from ${database}.calendario cal
        where laborable_anterior_yyyymmdd<>laborable_mes_anterior_yyyymmdd
        and (cast(substr(fec_yyyymmdd,7,2) as int) - cast(substr(laborable_anterior_yyyymmdd,7,2) as int) = 1)
        and flag_laborable=1 and cal.data_date_part = '${max_data_date_part}'
    ) CALC5 ON
    ESP.fec_info = CALC5.no_primer_lab_ant_si_lab
    """
  }

}