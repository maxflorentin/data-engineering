name: LOAD_CMN_Partition_Loader_Tarjetas_Mov_Fact
description: 'Partition tables with specific field'
owner: BI-Corp
active: true
start_date: '2020-12-01'
#schedule_interval: '0 5 * * *'
#catchup: true
retries: 3
retry_delay: 30
include_dummy_task: true
max_active_runs: 1
input:
  - name: date_from
    description: 'Date From in format YYYY-MM-DD'
  - name: date_to
    description: 'Date To in format YYYY-MM-DD'
  - name: shift
    description: 'Shift in days'
    default: 1
  - name: mode
    description: 'Partition level'
    default: days
tasks:
  - name: ChangePartitionSTG
    operator: SparkSubmitOperator
    config:
      name: ChangePartitionSTG
      connection_id: cloudera_spark2
      executor_cores: 5
      executor_memory: 8G
      num_executors: 5
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/shared/partition_loader/config/config_tarjetas_loader_fact.json']
      application: '$ZONDA_DIR/repositories/zonda-etl/scripts/shared/partition_loader/partition_loader.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Partition_Loader_Tarjetas_Mov_Fact') }}",
        'spark.sql.sources.partitionOverwriteMode': 'dynamic'
      }
      application_args: ['config_tarjetas_loader_fact.json']
  - name: MoveFileToLocalServer
    operator: ZondaHDFSOperator
    config:
      operation: copyToLocal
      remote_path: "/santander/bi-corp/tmp/partition_loader/LOAD_CMN_Partition_Loader_Tarjetas_Mov_Fact.json"
      local_path: "/aplicaciones/bi/zonda/tmp/partition_loader/LOAD_CMN_Partition_Loader_Tarjetas_Mov_Fact.json"
      skip_errors: false
  - name: LoadPartitionsCMN
    operator: PythonOperator
    config:
      function_name: 'partition_loader_common'
      function_def: |
        from airflow.utils.db import provide_session
        from airflow.operators import ZondaTriggerDagRunOperator
        from airflow.models import TaskInstance, DagBag, DagModel, DagRun
        from sqlalchemy import String, func, distinct
        from sqlalchemy.sql import func as f

        def partition_loader_common(*args, **kwargs):

            import datetime
            import argparse
            import json
            import os

            ZONDA_DIR = os.getenv('ZONDA_DIR')

            partition_date_value = kwargs.get('partition_date')
            config_file_path = os.path.join(ZONDA_DIR,kwargs.get('config_file'))
            dag_id=kwargs.get('common_dag')

            ## Read Table-file
            with open(config_file_path, 'r') as configfile:
                            data = json.loads(configfile.read())

            for dt in data['dates']:
              print('dates {}'.format(dt))
              conf = {'date_from': dt}
              try:
                  t = ZondaTriggerDagRunOperator(task_id='internal_task', trigger_dag_id=dag_id, conf=conf)
                  t.execute(context=kwargs.get('context'))
                  print("DAG '{}' triggered successfully with conf {}".format(dag_id, json.dumps(conf)))
              except Exception as ex:
                  print("ERROR - DAG '{}' with conf {} could not be triggered [{}]".format(dag_id, json.dumps(conf), str(ex)))

            final_response = 'Iteracion finalizada con exito'
            return final_response
      provide_context: true
      op_kwargs:
        partition_date: "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_CMN_Partition_Loader_Tarjetas_Mov_Fact') }}"
        config_file: "/aplicaciones/bi/zonda/tmp/partition_loader/LOAD_CMN_Partition_Loader_Tarjetas_Mov_Fact.json"
        common_dag: "LOAD_CMN_Tarjetas_Credito_Movimientos_Fact-Daily"
dependencies:
  ChangePartitionSTG: MoveFileToLocalServer
  MoveFileToLocalServer: LoadPartitionsCMN
notifications:
  on_error: true
  channels: [$DEFAULT_SLACK_CHANNEL]
  users: [dtridico@santandertecnologia.com.ar]