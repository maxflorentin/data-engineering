name: BDR_EXPORT_Tables_EV
description: 'Export BDR Tables for the New Default engine, in TXT format with fixed length (Monthly)'
owner: BI-Corp
active: true
# schedule_interval: '30 7 1 * *'
start_date: '2018-03-01'
catchup: false
retries: 1
retry_delay: 30
include_dummy_task: true
max_active_runs: 1
loop:
  values: [JM_CONTR_BIS ,JM_CONTR_OTROS, JM_POSIC_CONTR , JM_INTERV_CTO  , JM_EAD_CONTR ]
  iterator: e
input:
  - name: date_from
    description: 'Date From in format YYYY-MM-DD'
  - name: date_to
    description: 'Date To in format YYYY-MM-DD'
  - name: shift
    description: 'Shift in days'
tasks:
  - name: ExportData
    operator: SparkSubmitOperator
    config:
      name: 'ExportData-${e}'
      connection_id: cloudera_spark2
      num_executors: 2
      executor_cores: 4
      executor_memory: 4G
      application: '$ZONDA_DIR/repositories/zonda-etl/scripts/shared/unloader/unloader.py'
      files: '$ZONDA_DIR/repositories/zonda-etl/scripts/layers/bdr/corporate/${e}/Send-File.hql'
      conf: {
        'spark.yarn.appMasterEnv.month_partition_bdr': "{{ ti.xcom_pull(task_ids='InputConfig', key='month_partition_bdr', dag_id='BDR_EXPORT_Tables_EV') }}",
        'spark.yarn.appMasterEnv.month': "{{ ti.xcom_pull(task_ids='InputConfig', key='month', dag_id='BDR_EXPORT_Tables_EV') }}"
      }
      application_args: ['--query', "$ZONDA_DIR/repositories/zonda-etl/scripts/layers/bdr/corporate/${e}/Send-File.hql",
                         '--output', "/user/$SERVICE_USER/.sparkStaging/tmp/${e}_{{ ti.xcom_pull(task_ids='InputConfig', key='month', dag_id='BDR_EXPORT_Tables_EV') }}.txt",
                         '--header', "false"]

  - name: MoveFileToLocalServer
    operator: ZondaHDFSOperator
    config:
      operation: copyToLocal
      remote_path: "/user/$SERVICE_USER/.sparkStaging/tmp/${e}_{{ ti.xcom_pull(task_ids='InputConfig', key='month', dag_id='BDR_EXPORT_Tables_EV') }}.txt"
      local_path: "$ZONDA_DIR/tmp/bdr/files/${e}_{{ ti.xcom_pull(task_ids='InputConfig', key='month', dag_id='BDR_EXPORT_Tables_EV') }}.txt"
      skip_errors: false
  - name: CompressFiles
    operator: BashOperator
    config:
      bash_command: "gzip -f $ZONDA_DIR/tmp/bdr/files/${e}_{{ ti.xcom_pull(task_ids='InputConfig', key='month', dag_id='BDR_EXPORT_Tables_EV') }}.txt"
  - name: SendDataFTP
    operator: SFTPOperator
    config:
      connection_id: "sftp_ssh_bdr"
      local_filepath: "$ZONDA_DIR/tmp/bdr/files/${e}_{{ ti.xcom_pull(task_ids='InputConfig', key='month', dag_id='BDR_EXPORT_Tables_EV') }}.txt.gz"
      remote_filepath: "/${e}_{{ ti.xcom_pull(task_ids='InputConfig', key='month', dag_id='BDR_EXPORT_Tables_EV') }}.txt.gz"
      operation: "put"
      create_intermediate_dirs: False
dependencies:
  ExportData: MoveFileToLocalServer
  MoveFileToLocalServer: CompressFiles
  CompressFiles: SendDataFTP
notifications:
  channels: [$DEFAULT_SLACK_CHANNEL]
  users: [hpolitano@santandertecnologia.com.ar,jhungramos@santandertecnologia.com.ar]