name: LOAD_STG_MALPE-Monthly
description: 'Load data from Malpe tables in all data layers (Monthly)'
owner: BI-Corp
active: true
#schedule_interval: '30 7 * * *'
start_date: '2019-12-01'
#catchup: true
retries: 3
retry_delay: 30
include_dummy_task: true
max_active_runs: 1
input:
  - name: date_from
    description: 'Date From in format YYYY-MM-DD'
  - name: date_to
    description: 'Date To in format YYYY-MM-DD'
  - name: shift
    description: 'Shift in days'
    default: 0
  - name: mode
    description: 'Partition level'
    default: days
tasks:
  - name: STAGING_PEDT025_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_PEDT025_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 1
      executor_memory: 4G
      num_executors: 1
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malpe/pedt025/pedt025_schema.json']
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALPE-Monthly') }}",
        'spark.yarn.appMasterEnv.file_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date_filter', dag_id='LOAD_STG_MALPE-Monthly') }}",
        'spark.sql.sources.partitionOverwriteMode':'dynamic'
      }
      application_args: ['pedt025_schema.json']
  - name: STAGING_PEDT006_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_PEDT006_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 5
      executor_memory: 8G
      num_executors: 5
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      files: [ '$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malpe/pedt006/pedt006_schema.json','$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malpe/pedt006/pedt006.cob' ]
      jars: '$ZONDA_DIR/repositories/guyra/jars/spark-cobol-0.5.6.jar,$ZONDA_DIR/repositories/guyra/jars/cobol-parser-0.5.6.jar,$ZONDA_DIR/repositories/guyra/jars/scodec-core_2.11-1.10.3.jar'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALPE-Monthly') }}",
        'spark.sql.sources.partitionOverwriteMode': 'dynamic'
      }
      application_args: [ 'pedt006_schema.json' ]
  - name: STAGING_PEDT014_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_PEDT014_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 5
      executor_memory: 8G
      num_executors: 5
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      files: [ '$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malpe/pedt014/pedt014_schema.json','$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malpe/pedt014/pedt014.cob' ]
      jars: '$ZONDA_DIR/repositories/guyra/jars/spark-cobol-0.5.6.jar,$ZONDA_DIR/repositories/guyra/jars/cobol-parser-0.5.6.jar,$ZONDA_DIR/repositories/guyra/jars/scodec-core_2.11-1.10.3.jar'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALPE-Monthly') }}",
        'spark.sql.sources.partitionOverwriteMode': 'dynamic'
      }
      application_args: [ 'pedt014_schema.json' ]
  - name: STAGING_PEDT025_AddPartition
    operator: ZondaHiveOperator
    config:
      connection_id: cloudera_hive_beeline
      schema: default
      is_hql_file: true
      hql:
        - '$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malpe/pedt025/DDLT-Create_Staging_Table.hql'
        - '$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malpe/pedt025/ETLV-Alter_Partitions.hql'
  - name: STAGING_PEDT018_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_PEDT018_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 5
      executor_memory: 8G
      num_executors: 5
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      files: [ '$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malpe/pedt018/pedt018_schema.json','$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malpe/pedt018/pedt018.cob' ]
      jars: '$ZONDA_DIR/repositories/guyra/jars/spark-cobol-0.5.6.jar,$ZONDA_DIR/repositories/guyra/jars/cobol-parser-0.5.6.jar,$ZONDA_DIR/repositories/guyra/jars/scodec-core_2.11-1.10.3.jar'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALPE-Monthly') }}",
        'spark.sql.sources.partitionOverwriteMode': 'dynamic'
      }
      application_args: [ 'pedt018_schema.json' ]
  - name: STAGING_PEDT028_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_PEDT028_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 5
      executor_memory: 8G
      num_executors: 5
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      files: [ '$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malpe/pedt028/pedt028_schema.json','$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malpe/pedt028/pedt028.cob' ]
      jars: '$ZONDA_DIR/repositories/guyra/jars/spark-cobol-0.5.6.jar,$ZONDA_DIR/repositories/guyra/jars/cobol-parser-0.5.6.jar,$ZONDA_DIR/repositories/guyra/jars/scodec-core_2.11-1.10.3.jar'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALPE-Monthly') }}",
        'spark.sql.sources.partitionOverwriteMode': 'dynamic'
      }
      application_args: [ 'pedt028_schema.json' ]
dependencies:
  STAGING_PEDT025_Parquetize: STAGING_PEDT025_AddPartition
notifications:
  channels: [$DEFAULT_SLACK_CHANNEL]
  users: [mcaamano@santandertecnologia.com.ar]