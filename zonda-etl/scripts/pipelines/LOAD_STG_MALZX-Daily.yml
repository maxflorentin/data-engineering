name: LOAD_STG_MALZX-Daily
description: 'Load data from Malzx tables in all data layers (Daily)'
owner: BI-Corp
active: true
#schedule_interval: '30 7 * * *'
start_date: '2019-12-01'
# catchup: true
retries: 2
retry_delay: 30
include_dummy_task: true
max_active_runs: 1
input:
  - name: date_from
    description: 'Date From in format YYYY-MM-DD'
  - name: date_to
    description: 'Date To in format YYYY-MM-DD'
  - name: shift
    description: 'Shift in days'
    default: 0
  - name: mode
    description: 'Partition level'
    default: days
tasks:
  - name: STAGING_ALZXUCGR_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_ALZXUCGR_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 3
      executor_memory: 4G
      num_executors: 1
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malzx/alzxucgr/alzxucgr_schema.json']
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.yarn.appMasterEnv.file_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date_filter', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.sql.sources.partitionOverwriteMode':'dynamic'
      }
      application_args: ['alzxucgr_schema.json']
  - name: STAGING_ALZXLDGR_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_ALZXLDGR_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 3
      executor_memory: 4G
      num_executors: 1
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malzx/alzxldgr/alzxldgr_schema.json']
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.yarn.appMasterEnv.file_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date_filter', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.sql.sources.partitionOverwriteMode':'dynamic'
      }
      application_args: ['alzxldgr_schema.json']
  - name: STAGING_ALZXLLGR_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_ALZXLLGR_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 3
      executor_memory: 4G
      num_executors: 1
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malzx/alzxllgr/alzxllgr_schema.json']
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.yarn.appMasterEnv.file_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date_filter', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.sql.sources.partitionOverwriteMode':'dynamic'
      }
      application_args: ['alzxllgr_schema.json']
  - name: STAGING_ALZXLSTA_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_ALZXLSTA_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 3
      executor_memory: 4G
      num_executors: 1
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malzx/alzxlsta/alzxlsta_schema.json']
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.yarn.appMasterEnv.file_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date_filter', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.sql.sources.partitionOverwriteMode':'dynamic'
      }
      application_args: ['alzxlsta_schema.json']
  - name: STAGING_ALZXLCRH_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_ALZXLCRH_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 3
      executor_memory: 4G
      num_executors: 1
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malzx/alzxlcrh/alzxlcrh_schema.json']
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.yarn.appMasterEnv.file_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date_filter', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.sql.sources.partitionOverwriteMode':'dynamic'
      }
      application_args: ['alzxlcrh_schema.json']
  - name: STAGING_ALZXUCAB_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_ALZXUCAB_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 5
      executor_memory: 4G
      num_executors: 2
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malzx/alzxucab/alzxucab_schema.json']
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.yarn.appMasterEnv.file_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date_filter', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.sql.sources.partitionOverwriteMode':'dynamic'
      }
      application_args: ['alzxucab_schema.json']
  - name: STAGING_ALZXUCHQ_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_ALZXUCHQ_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 5
      executor_memory: 8G
      num_executors: 2
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malzx/alzxuchq/alzxuchq_schema.json']
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.yarn.appMasterEnv.file_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date_filter', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.sql.sources.partitionOverwriteMode':'dynamic'
      }
      application_args: ['alzxuchq_schema.json']
  - name: STAGING_ALZXUFIR_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_ALZXUFIR_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 2
      executor_memory: 4G
      num_executors: 1
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malzx/alzxufir/alzxufir_schema.json']
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.yarn.appMasterEnv.file_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date_filter', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.sql.sources.partitionOverwriteMode':'dynamic'
      }
      application_args: ['alzxufir_schema.json']
  - name: STAGING_ALZXUIMP_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_ALZXUIMP_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 2
      executor_memory: 4G
      num_executors: 1
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malzx/alzxuimp/alzxuimp_schema.json']
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.yarn.appMasterEnv.file_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date_filter', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.sql.sources.partitionOverwriteMode':'dynamic'
      }
      application_args: ['alzxuimp_schema.json']
  - name: STAGING_ALZXUPRO_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_ALZXUPRO_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 2
      executor_memory: 4G
      num_executors: 1
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malzx/alzxupro/alzxupro_schema.json']
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.yarn.appMasterEnv.file_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date_filter', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.sql.sources.partitionOverwriteMode':'dynamic'
      }
      application_args: ['alzxupro_schema.json']
  - name: STAGING_ALZXUDDF_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_ALZXUDDF_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 2
      executor_memory: 4G
      num_executors: 1
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malzx/alzxuddf/alzxuddf_schema.json']
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.yarn.appMasterEnv.file_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date_filter', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.sql.sources.partitionOverwriteMode':'dynamic'
      }
      application_args: ['alzxuddf_schema.json']
  - name: STAGING_ALZXDTCTZ_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_ALZXDTCTZ_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 3
      executor_memory: 4G
      num_executors: 1
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malzx/alzxdtctz/alzxdtctz_schema.json']
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.yarn.appMasterEnv.file_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date_filter', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.sql.sources.partitionOverwriteMode':'dynamic'
      }
      application_args: ['alzxdtctz_schema.json']
  - name: STAGING_ALZXDTDTZ_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_ALZXDTDTZ_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 3
      executor_memory: 4G
      num_executors: 1
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malzx/alzxdtdtz/alzxdtdtz_schema.json']
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.yarn.appMasterEnv.file_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date_filter', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.sql.sources.partitionOverwriteMode':'dynamic'
      }
      application_args: ['alzxdtdtz_schema.json']
  - name: STAGING_ALZXDTLSC_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_ALZXDTLSC_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 3
      executor_memory: 4G
      num_executors: 1
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malzx/alzxdtlsc/alzxdtlsc_schema.json']
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.yarn.appMasterEnv.file_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date_filter', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.sql.sources.partitionOverwriteMode':'dynamic'
      }
      application_args: ['alzxdtlsc_schema.json']
  - name: STAGING_ALZXDTLSD_Parquetize
    operator: SparkSubmitOperator
    config:
      name: STAGING_ALZXDTLSD_Parquetize
      connection_id: cloudera_spark2
      executor_cores: 3
      executor_memory: 4G
      num_executors: 1
      files: ['$ZONDA_DIR/repositories/zonda-etl/scripts/layers/staging/malzx/alzxdtlsd/alzxdtlsd_schema.json']
      application: '$ZONDA_DIR/repositories/guyra/src/guyra.py'
      py_files: '$ZONDA_DIR/repositories/guyra/src/config_file.py'
      conf: {
        'spark.yarn.appMasterEnv.partition_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.yarn.appMasterEnv.file_date_filter': "{{ ti.xcom_pull(task_ids='InputConfig', key='partition_date_filter', dag_id='LOAD_STG_MALZX-Daily') }}",
        'spark.sql.sources.partitionOverwriteMode':'dynamic'
      }
      application_args: ['alzxdtlsd_schema.json']
notifications:
  on_start: false
  on_error: true
  channels: [$DEFAULT_SLACK_CHANNEL]
  users: [dtridico@santandertecnologia.com.ar, mjourdan@santandertecnologia.com.ar]